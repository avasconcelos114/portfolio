{"hash":"cdce9177df66dc6a9cb788735660c6b0727e6f7d","data":{"tag":{"title":"AR","belongsTo":{"edges":[{"node":{"title":"MVP...E? - ARKit development and how to scale your AR apps","path":"/blog/mvpe-design-pattern-arkit/","date":"11. December 2019","timeToRead":4,"description":"The challenges of AR Development on iOS and how to overcome Massive View Controllers.","content":"<h4 id=\"introduction\"><a href=\"#introduction\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Introduction</h4>\n<p>There is little doubt that VR and AR are becoming some of the hottest topics in tech right now. With constant leaks and speculations of what would a more refined version of a VR/AR headset look like. While companies like Oculus, HTC, and Valve are fighting for the top spot in Virtual Reality headsets, when it comes to Augmented Reality, one of the companies whose name come out on top (despite not having released its version of AR glasses) is Apple.</p>\n<p>The reason being that Apple has invested heavily in companies developing AR tech, and have gone as far as creating its own development kit for AR experiences and games, called ARKit, which uses the camera functionalities of your phone to find surfaces and reference points, to which you are able to attach your own 3D objects to (in a nutshell).</p>\n<h4 id=\"the-mvc-problem\"><a href=\"#the-mvc-problem\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>The MVC problem</h4>\n<p>While there are plenty of tutorials online that will get you covered on how to initiate your own scenes, and attach child nodes, animate them, or import your own assets to your project, there haven't been any tutorials that cover a smart way to organize your app to allow it to scale gracefully.</p>\n<p>What this means is that by following Apple's MVC design pattern, you end up creating your whole scene and interactions onto the ViewController itself, which then leaves you with <strong>massive</strong> view controllers, and no easy way to refactor them into easier to manage sections.</p>\n<p>Realizing this problem, I set out to try and implement other well-known design patterns for iOS apps, and find the one that fits best alongside ARKit applications.</p>\n<h4 id=\"iteration-is-key\"><a href=\"#iteration-is-key\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Iteration is key</h4>\n<p>As I was (and still am) a newcomer to iOS development, the first thing I needed to do would be to list out the available design patterns, with their respective characteristics:</p>\n<p>MVC: Stands for Model-View-Controller, where the Model defines the state of the application, the view represents UI components, and the controller is responsible for allowing users to interact with the application's state.</p>\n<p>MVVM: Stands for Model-View-ViewModel, where the Model and View behave similarly to the MVC pattern, but the ViewModel is added to transform values from the model so that they can be used in the view.</p>\n<p>VIPER: Stands for View-Interactor-Presenter-Entities-Router, which provides a divided separation of concerns where the View displays information that is received from the Presenter, the Interactor retrieves entities and processes business logic, Entities are simple data objects (similar to Models), and the Router handles app navigation.  </p>\n<p>MVP: Stands for Model-View-Presenter, where the view handles the display of information and changes to the view itself, the presenter processes business logic and returns them to the view, and the Models are simple data structs.</p>\n<p>Looking at the basic descriptions of each pattern, it was hard to figure out exactly where should I be adding interactions and behavior to my AR entities, and a few failed experiments later, I've come to the conclusion that none of the currently popular design patterns can be efficiently utilized to design a reasonable large-scale AR app. A quick overview of my findings went as below:  </p>\n<ul>\n<li>MVC: <code>ViewController</code>s become too massive too quickly.</li>\n<li>MVVM:  Does not translate well into ARKit functionality, as the <code>ViewModel</code> would require access to modify the <code>ARSCNView</code> outlet (which goes against the original pattern of having information flow FROM the <code>ViewModel</code> TO the <code>ViewController</code>)</li>\n<li>VIPER:  Most used for applications with various screens, as most of the logic in an AR app gets rendered in a single storyboard View, the VIPER design pattern is unnecessarily complex for the scope of this project.  </li>\n<li>MVP: Having to add all entity manipulation logic on top of all of the business logic makes it just as susceptible to have massive Presenter files as the MVC pattern would have massive ViewControllers</li>\n</ul>\n<h4 id=\"the-answer\"><a href=\"#the-answer\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>The Answer</h4>\n<p>The answer as I've found, is to add a separate element to design patterns that are solely responsible for controlling an individual SCNNode element, my initial sketch of how the application would function went as below (please forgive my poor handwriting)</p>\n<p><img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 1430 1240' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-afad867002053ae7d69bc989601434e3'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-afad867002053ae7d69bc989601434e3)' width='1430' height='1240' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAA3CAYAAAC8TkynAAAACXBIWXMAABYlAAAWJQFJUiTwAAATbElEQVRogc2ba3BV13XHb/IBuy42GEpb0hlS7JkkAzNN3ThppkkfYOrEgAumuKT%2bYJqOx/Y4Dh/sYBtsXGzA4IewebgTQw0GYsCAsQ2UlwQySEIg0FsgAXoLJARIQm8hCVbnt85dR/tunUvsaT90z%2by5595zzj57r/Vf//XY58Zefnm%2b0OfPn6d9%2b/bt0tjYKDdu3pT/z4359fb1ae%2b/cUNuJrmmr79feq5fl%2b6eHv3t5KlT8sj06fJPDz8sUyZPlpi7%2bCVLFktXd3d4c/%2bNfh3cOoPROzo69MH2nc754J7gOv8%2b/bzRr9e4Xa9xrh90zut2jgW73b/HvYbGfNva26W0rExm/vNMmTp1qkxGAK%2b88rIi4KWXXpRVq1YOmsRADx7CgEjUnYg199g/Z99dwfX09Oinu4Cv293F%2btq387TKykr5xaxZ8tSTT8m0adNl6tSHZfJDkyW2YMEr8uqrC2T%2bvHmydeuWhJujOg8CTnbMA65cuSptbe26mOaWFrl85YpeQ29qapKm5ma53tsrlVVVUlZWJuUVFdLuoOjrCsDVrDXmwfMaLl0K4W7X00B2VXW1nn/88dny858/JJMnT5HYa68tlMWLF8nL8%2bdJenp6OJgPMbebAGxgpNva1qaLudrUpAJgjI7OTj1uvHxZz3EtgmDhtxr/q3Qb/8LFi1JbVydVVVX6HOaCgP11cFxTU6Mm8Mtf/vuAABYvXqS2DxIKiwr1RiZ7Kw10dXUl2LxpwyVOF5bBfQEU/7dwp7HgoxkZkpOTIxUVFXKttTXh2WdKS1XQtnAawnp4ylSZ8cgMeeSRGTLFOOCNN5aoAJYufUPq6upCAbjkFhz3SV8csp2dnSEDu12vc4/7%2bwf/7vXevl6drCGD59h3ukuonKcxz08/3Sl1Fy6oyV1qbJTOri5FYXNziwqlvr4%2bWEvcS9A5T1u2dJlMnPiAEmFs2bKlKoDly1P0AqSWuPD4BByhIIBQSO7CnMkGxwPjuIKyxZpwQtTEUeWTWc/1Hunt7Q1/u3Lliuzbv1/qGxqktbVNeQX7Ljl9WkpLS5Vzzp07N8iT5J7KlUNpafL000/LT/7mJzJp0qRAAK%2b//pq8//77OiG9KT55XUS82%2bKYvJqAIxCTsp7r7g47XGHHA6hIFBgepbKySs6eO6f2TM8vKJCCgkI5f/68XL16NTQdFlxSUqJkevz4CT0G7qAADsjLy1P7b7l2TVpbWxOUSMP9/dVf3ic/uv9%2b%2bdafjpZ777knEABE%2bNFH6xM0FsLe0Z4xrXGAar%2b3V4/xsdXV1dLYeFku1tcrIaEJSJHF8KnBSxzWBmeuPZiappBFe6dPn5bi4hIpKCxUxi4sLNSedeyYFBYW6eJowP7MmTN6HfdVxD2L75bd7%2bYdVq1aLbFYTEaN%2biOJvfXWm7Lo9ddk27ZPAub0YOzzAb67u7s7QfNAF/NhMUo8cdRci0%2b2uqZGWlpaEl1snJyampol%2b/gJvZ77QQCLuxR3Zzk5J%2bXzzz5XYdr9ZkLNzc36DOwfkmU%2b5eUVipQrV6%2bqsBgLruD%2bzMxM2bVrl8yZ82sZMuQ2GTVqlMTeeedtdYN79uwOCTBq8b4AEjgiDuWKikplaGDIJLBLJlxbW6eLwxSYCKzNxIEubumLXbt1vPr6BikvLw9dGvdnZ2cn%2bHXTqPtpto5gck6eVE6wxVdUVir6aC%2b9NE/uGXuP3HfffXLXXXfKiBF3Sywl5R01gfT0w3qRz%2bDu99AEHAGYaXR2dqk9cl4XX1WlQuEaNLBz52dSVFQs%2bfkFukhsPjcvT7Zs2Sofbdiok%2bd6tAnJ8gwVXl2d3g/C0CpCY3H62XItRKOZZFFRkQoA1NXU1mrnXjpmSlu7dq0MG4YAhoOAQADZ2ccCAcRt1Gd5g50lFi4CmCiD19TU6vn8/Hy1e4VfXZ0GQ7ByVGPMjMwstV8/cKHBA2s%2bWCsHDhyUtLRDcvRohpw4cUJOncpVkoQfTPs0YgM03tDQIOfPlytvwC8ESNnHj8v27Tvk2V89KyNHjAgEgPtbsniRMqiPAOMDy7zUN1%2b/rmbguhgakOaBaAetdXR0qlAUEfUNcvZsIAAEZD6eY9rhw%2bkqLBpaRWC4umvXWnXMjzdvVkShTTRrpkODHE05tKLiYn0%2b/GDm1NBwSc99uG6d3H7b7TJu3Di5%2b%2b7hMmLEMIm9%2b%2b5yefutt5R9fQEkBjPmBQK3pm7Sd2fxSdJZgHqCpiapra1V2zdN6YTjn2ib%2b1jI0mVvypkzpbo4mL2s7KwuyAjQ7J12%2bswZuXz5snoBTMM4AkXAA/yOmwQloIbx8C4IFzMZPXq0DB9%2bp8RWvPeeLE9JUZs0ASSmoIlxQI/LAU6UZ6Zgi%2bQ3Pxz2ucVMigZKnnr6GV2w3ywKNBTS4BICH0ju3Pnz4dw1VO/uVh5hbATCgpmHLr64WLKysmTkyBEydOgfSGz1qlWycsV76kddBPgEaMeQjqWxFtD4EZ6/UDesjfIsBt8dOz6V9C%2b/DH22mst10BJ/Rm%2bfmiDtfHm5Lga3SSBFs%2be7KTLHp0%2bf0fOpqWkyfNhwGTlypPzohz%2bUsX8%2bRmL/uXq1rFyxQm0rmQm4AmhvD9JYV0A6yQRvkRhJRgkrsQdazcjIkPT0L8O8QwnZCcLUDOImAL8ggLy8fMnNzU1KsAgCt0wyxD14qozMTHnqySflT/54pMRWrVwpq1auUNakhbCO0pYKIMj7fSlbHJ8shoiCvysUxgHSu3fvGfAy8XOMbeSKvcMrKCw1NVW9w6ZNv1MSLTt7VpGM3cNDZn5KnM0t%2bh13yDzHjx8nQ%2b%2b4XWKrV66UtWvWSHtHe4KdutnfgL/vl4729tBPI1HzxzB2W1ubujODu7tANw%2bI6ogSAtyxY4cuFk0H5hNAHreHG8ObnDx5UjUJD7A444GCggI5cSJHkQGa9u3bp%2b4PfmPOmM23Rv%2bZ/MPf/b384Pvfl78YPz5AwMebNumkfe255GckV1NdrZBKS0tT6HFMOEvSAooIgk7l5qqtAmHX7bkewM0i1RvcvClVVdXy6c6dGim6HkNJr6BAzp0vD4/JORDUxYsXFd5GtNaYFz4fwXANqEL7e/fulbTUNJk0YYKMHTNGYu%2bmpMiO7dsHx/99iRpkIjygrrZWjh3Llmef/bX89rcfyJdHjmgwgtshEML/mkeJYvOoY2vnzp2XAwcOqDDCWCEeBhPjFxQW6TFhNcEWrhAXyjELNYUwD%2bIadx5mstamT58mQ4Z8U2JvLlsqO3fuVAj6pOXn8DRsjIcRlR0/cULttri4WH03uQBR2LHsbJ1kdXVQggKipaVBeIorMhutrqlWWMLiRIrY87FjQUTqN64nqjMPgamBFBAGL4ECwmi8FHMlBiFlVjKMo5trJ0yYKPfec69mgnePuEtiy5YulV27vgillKxbTl1dVaWLA34snpQUqVsmx7UbNm6S3338sbo1Yv0PP1wnW7ZuldS0NM3G6Ahv167det0nn2yTzz//QiPC4pISNaPqmlolPZ7BtYfT05XkXHZ3S3IuIZuX4Hk0zFG9VW%2bvLF%2b%2bXAj/H3hggtxxxxCJLVr0uuzfvz/wAPH8Pxl7qwCqqzVL04FD/x4vbV2/ruQIB1h5CpJEG8T0oIOoDs7gtzD1bWzU3y8rj1xSpJRXVCoyiopLVDhr1/6XCsMEYPOx7xZPGJEjgP37D4TXWJpubeHC/9CagG6MWDXYTYSiAhoecuHCBdVSlF0FQuxXFnY9StRmh5/WuvsRUY0FgRS0mnbokAZM23bskIOpqSowTJJ5ZWZlqe1jerm5eXofZkdOAJ8tXrxYJk6cKN/%2b9hgZNmyoxNgRyjqWFWo0ebASBCYwamFRkYaYMD%2bDA1V4AXvGHGBpS51xY0FEF3SOzTOEHsLxFJYjuN3SalOG8RExfkZGph5nZQVJ0aVLjZp70OvqLmgqDdrgDPYvnnjiCZk06R/l/vt/IHfedUcggNy8IJJyy1W%2bIDTh6enRDRAGZKH4WCo32D/fITugDjlZddcivTBUdgqiCcdeYOTWDcM6oiZkA6iC%2bCwPoLbAvGjMATPFO6gw4ik5cQL8Qtv6ydbABNgSI2sKEBBoQifmacCKoXSDbkg%2bHmwtyQnvdXv8N4RpaLAiCwyuqPGQ4qPCFRwumQbk4RQaBVF4BdO4FFeI7XkeOnxYUlIgwrdl7NgxEnvxxRcUuma/FtImdPvtxg1pqG9QN0fUhoSRqEkcFODurPISteH5f9kZm2jQ4gQ0bc/1m3mxVxYskG9845syZfJD8tgvZkls7ty5SmyB5gLputIPenAMi5aVlinL4/4gG7abTAj4Y1JNhAEmrDRu4xka/O/hc%2bLf3Xtsj1FrkYYUyxR7e%2bXkyVP6LMpgeI1g87YncmzWhlfi/u3bt8mwYX8YCODK1SsDO7dROz58xnOD49nH1eZJSMjh%2bQRi2COmkHUsWx9iRRKf0CxPYBIWvGj%2bTi2wq0vvsVCZ66I2Qt3U20piwJ38wMg8Ot8Q5YmrTc2Sl58nIwiEXnjhRX2wuyOUsOnhlMaY1NEjR3XysC12xiJ08PieIdGcQs4trDildlpJyWl1USdyclRgx3NyNJQmrCV6hLlhcAiM3/iOmYI40GVwpnEf8ycwYxyDu98tpP5gzRq57bbb5bvf/Y4MHz6U7fEFKnW36uIXMgKJBnF56sFU/U52RfbnPgRh7N27T02mq7tLz4MOTMMqs9yXl5%2bvx2gal6k5REuL3m9hLuettA2DgzbeXEFokB3Xkxqzp4B7Y064Ql2HISA%2bd8ZESLSys2WyceNGjQe%2b973vSGzJkjcScoBbdViacBV7YiOCbqVsHoxpEN5ChgQeaIsYHu3BG1SKCZLQmo0Je1P7w50FGxxBAOXW/9x2prRMtm3foeFxZmaWRodW8qbiYwXcZDUIt02bNp2i6Hv6MD/w8AMWbr7W0qIaxucSDLEoPAKSR6tMynaY3RqAW/5Cu2R9NCCONru7e/R6uIDFgATCZj5BASgiVGaeuXn5sv6jDUq6CBdToUbA89l3CDZTHXcb7%2bYGKZjOmDFDFrz6qkyZMlVibBJEEYe7ZW2fFEN0V6e1VSWukO7qCjdFbaHG1C57B1FhrxZPmCzCQPObt2yR7Ozjygm4NIRIwKJ7/5WVmvKCGjI7nguqLM31w2oTvEE/rCNqWh0UVvBeRIPPPfecPMQrMps3bw4FMEB60WWtTt28GCiQ%2bAWUhMJo32AiteMg2akIqzmg6MjRo/ob5sGiOYdfx0VTaIEIQQtmZknPgL0PhNMDnmvwOw6%2bCTz//PMSI9OiGcxd0vNNor2tLYzg3HOBX070vfa7u5liv1nAhaegUQnat/9AwktUNOMBm7yNB8IwDVwaqNH3jZyI1eZiwrD5Mxao3bPnv/V1uTlz5kjMMkENFG6VCPX1SWdERdjC5qjEyTUhn2Os2qMZ5sWLcvBgqhLsh%2bvWy8WL9cEmS02wyYKN4wnI9uhEffbCk22jG49F5RT2TK6BW/76xz%2bWn/70b%2bVnDz4oMSRBC6OviMiNsjeDtLUOICDs7ncPHVFICCPBeFRnn%2bwMAfPiktNq6ywc4lNS7OhQQuQ%2bPo1vAh7oD72QQR5EwFHYvRtRGh9phaqsTF6YO1dibh5wq4qQ7gB3dN6ybD6ojP57xnOrTcyD0hrVZWwfrSMAfD2htrrW6mqNB1Aa1SFiAvgCAsUrgQxQwzgIMNm67N2EDRs2SMxei7V433chpkkNUNra1b7ceD6QbGJ8b6zv5wEJSHGuQWMsFq0cOXJU8gsK9R0g2J6FIxCEAAECYWJ%2bSJLF635A2Vn95CUM0ANq9JU8B3GGQkzimWd%2bJbNn/5s8Pnu2xFiQy5IJ2vP3BJ1AxZes/9tAddny%2boE3wnzOYExLUsy92captUEvRsYDM2t%2bxcnfhzAvxzXr1q2T53/zG5k1618kFrUId/ImFB6mJhAvLkYRm%2b8dkvGCn2XaefIATAENEtSQclOrYKeZgAeyBBWgwa9XwBODqksRRG7VJNr%2bA/slFlRrPIZ2oGMukRg%2beEk6McIalOo67i7RBOKwDwsfA2ktyOI5jI%2bNQ2ogAphjFpgpLo/FY/uYgaXNbnqc1OSccyRtvCsE6W7eskViX/XdXPWzPT0De4HeNcmKn1FFjBveOfdag3PUy8%2buOdyKVMlR/Oe7u9ALFy6UcePGy4MP/kxiCZD1JIn7MxQYAvwYWzVtoa9p1wmF3fcG3e4WONx6wKBr47%2b5biwp%2bjxTiyqwIgiKOOwcrV%2b/HhNwYv%2bktuoIwA1sojxGRBwwqDrjdo83/DF9bolaVLJzgwo7cVK01t3TIzFjZH8h/gR454e8PsquTDuJk/WEk0QwfnE07I7WfSH8PvJ1BesKwLzMZzs/0/8OpKQsD7xAoguLDmZsz82v8iTbRUosaw9OlqJCVl9b7jtI0UFWYrIz%2bE1Xp5oV9140NlVmzpwpj/3rY4EJ3MpFmYcgDPYn7yPFOCMZI7usneAlIr6HXsMPzSNyDBf6yUro7j0umcaSxgCetO0VeVebXykcTnL8dcLpr/rbrUJtu4ZFkyeQD1RUVErM3sUxuwmkPNjeNBX2tBnYWaKNJ2prMA%2b4nwmBUrLYIqJClYwAk5mVyw806pD8Z%2bjRRx%2bV/wEwskJuX9YjnQAAAABJRU5ErkJggg==' /%3e%3c/svg%3e\" width=\"1430\" data-srcset=\"/portfolio/assets/static/mvpe-design-pattern.82a2fbd.c491b61fc0cdad7f317cf3a84fb2f28e.png 480w, /portfolio/assets/static/mvpe-design-pattern.cbab2cf.c491b61fc0cdad7f317cf3a84fb2f28e.png 1024w, /portfolio/assets/static/mvpe-design-pattern.0eae6d2.c491b61fc0cdad7f317cf3a84fb2f28e.png 1430w\" data-sizes=\"(max-width: 1430px) 100vw, 1430px\" data-src=\"/portfolio/assets/static/mvpe-design-pattern.0eae6d2.c491b61fc0cdad7f317cf3a84fb2f28e.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/portfolio/assets/static/mvpe-design-pattern.0eae6d2.c491b61fc0cdad7f317cf3a84fb2f28e.png\" width=\"1430\"></noscript></p>\n<p>This method creates a twist on the MVP pattern, which includes the addition of your scene’s Entities (to which I've come to call MVPE), where we have the following:\nThe <code>ViewController</code> is responsible for handling user interaction (taps, pinches, rotation and the like), and trigger events on the Presenter\nThe Presenter handles business logic (and in my example above, use the <code>Services</code> to make API calls), and instantiates Entities based on information received by the <code>ViewController</code> (position and rotation of entity, for example).  </p>\n<p>Once an Entity is instantiated, the Presenter makes use of a protocol to request that the ViewController attaches new SCNNodes to the SCNScene. Methods defined in Entities can also be triggered by the Presenter to update the Entity (like changing the contents of SCNText, the position of a node, or to remove it entirely from the scene)</p>\n<h4 id=\"conclusion\"><a href=\"#conclusion\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Conclusion</h4>\n<p>Having a whole new entity to account for in AR apps, as opposed to traditional iOS apps, means that design patterns should be adapted to handle that extra layer of complexity, and while my efforts may not present a perfect solution (As I'm still rather new to iOS development), I hope it may trigger some ideas among some of the more senior devs out there who'd like to chime in and share their views on the topic.  </p>\n<p>Please feel free to offer your feedback, and experiences into it, it is my hope that we can find a more sophisticated way to develop AR content, in a more easily maintainable and efficient manner 🙂  </p>\n<p>Sources: <br>\nViper Design Pattern: <a href=\"https://medium.com/slalom-engineering/clean-architecture-for-ios-development-using-the-viper-pattern-fac30f5d29fc\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://medium.com/slalom-engineering/clean-architecture-for-ios-development-using-the-viper-pattern-fac30f5d29fc</a><br>\nMVVM Pattern: <a href=\"https://www.raywenderlich.com/34-design-patterns-by-tutorials-mvvm\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.raywenderlich.com/34-design-patterns-by-tutorials-mvvm</a>  </p>\n"}},{"node":{"title":"Rendering your first AR object with AWS Sumerian (1/2)","path":"/blog/rendering-your-first-ar-object-with-aws-sumerian-1/","date":"19. September 2018","timeToRead":4,"description":"How to set up your projects and scenes on AWS Sumerian.","content":"<p><img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 1000 553' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-884a1bf95e0f4e81d34ae4482fd331c3'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-884a1bf95e0f4e81d34ae4482fd331c3)' width='1000' height='553' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAjCAIAAACra5t9AAAACXBIWXMAAAsTAAALEwEAmpwYAAATPUlEQVRYhY2Y%2bY8kyXXfWz%2bIuzM9XV1dlVccGZkZed9nZVbWfV99H9Pn9PaOZm/OLHeWO7vcFUmZWJu2ZMOmRAKiCVmmZcn8QbAN6AcDhgECNv1X2PD/YtSsRC0swDuBLx4iIzOA98kX8eJlbjiNxeXt06x3mPaOpgd3w9VN3D7ozq77i%2bv2%2bEyPRorXV/0h9YdaONLjyT%2bUFo1lt%2bcVi2J4MlxeDReXw9W1nc2S9n5/ftGbX04P7jrTcy0af32WGgwVr0/9vuoPtGC4Vri2ktPNuofD1dVocu64Iz0Yv5w4Nf6BrHTuNBYbop7aUU91CkwjUYtkI8E0NNym6Zeq1zHCodeYG2HPCPuSmQuSC2T/6xIkjxgNKxk72dTLZ2Y80oKBEfSseOSkYysZiXqC1Qir0f8zi7ptN5uZ8ViPhrLToV5PcTu637Pjsep13HCIbq/qn77HubEou7xocshgkf51cciAsrOBqeckfc3Jqwze3OYR0QFWvTCL0lKxcy%2bft8anftIPi6mkh5sVZrsOKjXhpUClDh9UOah47cnpcHkxXl15jenaD6%2bdtJZpe%2bkkwx0GVapcZYff3hG2a2C7BrfraHObM8POdP%2bmPTxK2yvJLlW/p/kdNxmUg0NqZ6Hfrfz4g3v/7V9WfDMLknubW7/zO7/7rdfu/72%2bdf93v3VPVugGpLEeTySnTf0B9fuy21W8nuz1kZYCACFEHA94AQgAAYghFiEW0d8JY4JFgrEoAMgLUABIFCWRSFgkAEAAIAJAhEAEgihwosCKgCdQIAhJCEoCC5kdxNZEnpEBq4qCToBBBE0UZMQJla3q5%2b%2b%2b9h9/et80MIcwUXgBv36v8nUxHGA5sAFpiGgkSC6mAVJ8rAZAcgWyjpqMkUqQqSqmqlCCqSQqRJQJkYgoESJJa5G1leSvNVEUDUP//d//Qtd1WVEUSmVZkSVJJkhBvAIYeS1WBqyGeUMSTFnQMCvxdcLXicAQgZEhS9kq/Pht4d/9ccW2AyeIkoZu2PfuV16/X7m/uX1vc/v1exWRUFUzN5LOIYdNHmmmE3UH095whkRtqyps15FKFQWx7z65%2b4Pvf06Eum9prq44mry2umKpkkklk8q6IumKrFOZyjJVZKooKqVpmmiqihFUJKJKRBWhggQJ8QRykGd5ti4CVgIsZGuQrWGuRoS6BBhJYAIF%2bArwJZ6T5ddl/V6Vu19hX3tQe%2b1%2bbbPCVutws8Jubq879x7U7m0xG16x4rDJAsWwgyhrcUB%2bsPYe7zDIWPtHYt/KY88zqG9rgaO6uuzqsm/RwKKeofiWGtqqZyieQT2DrtkM6uiUSoTK0mQ48CxjvWwwREBAQNAkCHiOY1kF8xRxMmAo5jSRUzGrE94S%2bUABrgQ0yEEOCpykECfPh2nUFmXHCMq4GBEjQmoU5SM76jBQ3/CLFSeaHFQdP82K3g5HthlcYfAOi01VtjXJ0mT3paOOLneajcV0OOq12kXayuMyC9PQiT0zdo3A0gJbCx3Nt9TA1lzLoBJ59u0PsiQWeM7VpST0Wlm46IS%2bY0oi1mSoibwm8ioRFMRrEjAk4bcAOmQRIqruZ35nNTvbm5x6ftlZPZwe3gTl1Mpmw9VNb3EFZG8jaC5Vv2cm06S125udiWYpOx3F7VG3berUM6lrUkuTPVNzNOny/Oz7P/jBixeffPayvXjx4uPnz589ffrs2dP95dxSSeDovqW6phrYum9pEgYywYZGD/rx0XJyc7J4ejUb9VqeY0WWEtuybxBbgRrmDFkwJbAGkNcABuIgxLYTmTSOgl5gl4oW0bhXjA4EI8FWS49GxOnWkbnhNBZA8aHsumGz1ZvFeU8gZh2oHNJcU7VUUqRhu8g8Q3ZN5ezk8Pnz56enpw8fPnzy5MkXX3xxc3NzcXHx9NmHV5fnjiYFtu5ZWugavq2vmU3Vs7TIsz%2b6Ht2c7r736OBffOdsNRsVWdxPraanBLoYmqKjAF3kDMw5Eu/LgisJBmQlorTaQ8/Ms3TcCPumndNk6BQzyW/J/sBuLLRoyorORtQ%2b4JDBQaoZXtEapHm7us7uQp1Fqa/3W42Tw/1mFrXzRCfwYHf53U8%2bOTo6Ojg4ePTo0fe%2b972Dg4P5fP748e9dXZxbVIwc3dakXqsYdErPVGJHz3wzj/2np92T3enZsv9PPjg82Zs303je8kYNO9CwqyHfEB0KLcI7hA8pcAhvIAZBkcgWBJpIHIItgA1OdiD1OGJxxIGKz0teTaAbTmPOIZMVFMOOsqIrq87WDqjUEcOT3KUfPX3vf/7mN3/17//i/PRYhszuYvrpp5%2benJwcHx/f3d396Ec/ur29PTg4uLu7u7258k2aBk5gqf/ohz/41X/4y0m3KCKrn4dlFj7ZKxejzrKXPb0YrqaDIg3LUC9dJXfk0CS2AgyRswhvi1ygCBbmDMhAAUEaSkYoGzFWvAdVobIDtl7aSg1sVlggmoBYG1F7nxdNAetUd3ujuUTt9aMvAWbt%2bPx499e//vVv/sd/H/VKk%2bL5ZPjpp599BXB5efnw4cPJZGKapm3bruuoVLFMXSL4%2burql7/8tweLQbfhj9tZq5Hc7jZ7ZTYogutF3i0boWfHpjRs2GWohYboqsjVsUl4EzGexBmI1UBd4KFiN5Bk73BSnZerDP66tuvwq%2bJiw82XLDYYXrL9NGm0vahR48StGmR4cdmJLvbHf/5v/uzPfvGvZ908tuh81Hvx4sX%2by7ZcLimlCCFVVeM4NgwDImQYrqLQWq0GIewXUTu2WombJ/7JKC4Sv53Y55Mkj3zX1ApHGiVaK1RzV/Yp8FRoiZyJGJdwOmQ0UONYgcNGjSMPqtyDKv%2bgym9VhQdr8ZUdYV2brFMl2QjLPQ6bOyx2gizN283uyHLjzW2BFcjROO948p///Gd/%2bctfZBZuBuZq0v/yy398dHS0Wq2Oj4%2bjKNI0TVEUz/M0TYMQTabrsxhjUdd116DZupKx0sCZ5E4a2Kmrrdpe7K1TbNNX%2bpEaaDCxSKAhU%2bJ1xFiYcQlrvATgOVADGotMXrSh7CLZXVvFQ4onEJvDFoetHVba8Iolh00OUtONsGS8/oCt1GCljuocHhdB6Yh/%2bpM/%2bs9//atAFcrIPFiMfvazn11dXc3n86urq36/DwDgeR6tG2ZZZrlSKVV4nmdZtrK9TalKKQ1dc9L0XEuPbHWU246pUQmnFildKTFwYGBPhY4sGJAxYN0WGRXUKb8DBbyu5IOhEY3S7kF3dj6YX4x2r0ar66C5VLyeFo44bG3o0YTFxnYNUMMrOyNE9M1toVJDNRYPcr/pK3/45ff/5j/9dWqRXsPdn/V//vM/ffPNNxeLxfn5eZqmtVpNURSEkCAIPM9DiMV1AERJkjRKqaoqiuI7Zje1NCoHptKOdEUisogCHeeunNjEodAQufUmRqyFGAczVKgZoAZ4UGHEKrvWdh2vxYhVZt3/anA9zuANv7nLQL1Sh5afdYfzOGu1e1PV8Cs7oBPbkY4%2bfP%2bd//pf/qb01TI0Bs3kT/7kj9966639/f3b29uiKDY3Nw3DEEWREKIosqpqsmwRQpBEkCyJ60HFNvXEpopMXJ00A5VgTBAINdhwpNQmLgWOAmwKTci4IuOIjCrUXMwAHmyta%2b%2bvhF7qt/2/H9/A1FesRBCNKoPqvFTjiSCqcaMlUbMRmJEhnu4vf/VXfxEZYu7pncz/yU/%2b1T/7wz/6/PPPP/vss29/%2b%2blkMjF0HUEEIOKFamY8tO1rhfIdpPehYutybGmpoyeWIotYl1FoyRhBDPlQx4EKXQrWG0DkTMJZaA1govX6cVAdcGCr9pXf/z9tYBo4yVAyEgbqLDIYqHPYDBt9xfB9XfEo/uT5s//1v//Pk9srV0axqR7v7x6uZqNu2cyiViMukzDxLIeS1KJNW53k3mw6PBo8/uw4/3SvfDyLb0fxUdNexlrfU5qW3DAlFQsS5BwKXQUYhLfWrx%2boiDVg3YR1TdjRhJqDGMi/GgAvBZLTg1pDtFrYaIpmSaySVxostl0Zli794YuP/uCz588eX3ZcqeNJucYXBhj5UssSQwmkmtgN9X6gDTw6cNWZT49y99GsvJ6Zd3Pv8Sh6bxE/nroPW8ZurC5CZeRJLQMnFPoK8CTBk4FJeANzBmZNxOigZoK6ytdsWAevCKC7edScR8Usac3z7m5UTK2o3x4fWV4eSfzEl1qUnfnMh6fWZzfNH77R//7D1rcn4fur7LIfHLftRaq1PbmwScsiuY5LA3Vt3DKESIOmxHuykOtoGuJJKC5jaS%2bT9xvqLJRHHs5VEEqcI7LW2nVWX6egmgFrFqpr/I4nMq8KYPllXC7DfBoVs%2bbgIG0vvWw8P3gUpp2YsHOfzD2yiuX3xt67Hfv9nv9%2bzz8vrNOWeT1yLofWads4yNShTUoNpQoIVeArvE%2bYhg3LAHcDPEzJNFUOWvR8pB%2bW6mVfeWelv7PUD2NlGZChBUrKxYT1MOMixhMZT2Rdse6JdcAJW/VXAGABVQ1ftyNFcyVq36twr2%2bxr20ylR0Qy0LPhCMbdU3Y0dBhqJ6m2n6qTzN1lpKOiboGXvhS3wKFxmcyH4prPyyhRvmqJTEdG05ccRJKY0/cL%2bjNwr5bOm8u9McT8vZMem%2bhvTs275r6O2Pzri2fNfDUAy2Nb6lcU%2bVzyiHh1SIgqW7R6pftfpw2G0VXNXyZ2gyQt2vAxWxTFdo6aOlCWxfOInnm4LGFdj28jMAqJCufzDzctbmMcjasKWxVZ6s2txMgpqDC0MO7BV0VcscXpw3loKuNM/mwo12OtA/2tI%2bP6MdH9DtHzvtH8Zsr7%2blJ9N5BcN11jlN1ZKORJcgQPqih6jcCiNTJik6zPYjiotketXvj3mDqhVmNQRasNxSupQtNVWhQrmvAuSMODLhMpLOOtorIMsCrQup4MKGMR6oOrjpgJ4K1GNQaIpvpsBcpvZDkLo5NnKggpqD0pJOh9%2bZu9NF5%2bvFl/Pxh8ObAeNw3Pz4K398NTzr2w4Fz1rWPS12TyObOqwAoTpjktpdEaTNMS8dPorR0gwwT1RRqqcS2NL6t8y2VTymXaVzbE5Zt%2bWhApw35ZGgelKTn8IVWL/V6y2QzrZ4otYQKGRViKqQqKE1UGCCSuFBkI4WfZsrTq%2b7z68HHZ63Pb7vfPY4/2A9uetpxLB8EZO6Juyl50lHf6ZkOle9XYZX5JgBCnbzsle1Bkrfb3Une7OXNLsNL2zuCBeqZxHY0vqtxHY0rKTPy0cVQuxzQi4FyO9fP2vJlIZ40cNviJgEcOLBp8bnFNV2Y6iBWQaqBWBWaLigdvuMJfV/YL5Qn%2b9mzq/ZHp%2bknV62ne%2bG7I/utvnnX18479CyX90JyFkunqayI%2bMGrRADLdqPZKVr9MGnGWRlEeZQ2gygHSHGEaqkwA4MbGmxf54YGN/PgaUM5T%2bhlSm8T%2bSZSLlLpPFf2PHHk4FFIhgGZxWSa4G4ACpPpumzLYROV7Rj8LAJ7hTAL4V5ELlrq1ZDe9eWbrnIZkmsDPArJG03lrqdetOl1QZ9kiiGKr7qEGs1uWnTSomN7yctvBVSpwR0G%2brDWoczM5lcuv3T5lQtGJjc00cKTZy65a2gflsbvpepVJN%2bkylGDLBviKlP2G9LpwLiYWucDeb8QFqmwcMDcBOsY2vw45vdSsO%2bApSEcmWhfA7sG2tXhrg4PTPHQEvdd8bhJP%2bjqERHvvRqAvd7EnUGj6AZx0Wj2wqSZ5B2GE0O001fZmc3vecK%2bxy/tNcauh25KdZngg1x6u21%2b0DQuC%2bXJRH821t9u03da9DIjFx35jaX9ZD942BWXsbDrwkMHzy3YoVxGmZYHhjEc%2b3BkwYWFFgZcGmhl45VDdm0898RxiK9HuqtJr7QHROqkjXaUlH6U581unJWNZhcSvVoDKWEGGjezhMMAnkRgzwPHITwK0Ycz83tn5osT87vH5nVPfTzSX4zt75b6s1L7aGC%2b19MflfLdiL69Z1/08HHOL0JuaPIrCy1NkCuMi2u%2byKQKn5uw54sDC451MDLQ2MILG09D%2bbgbHmeKJr3aEiLrNNrO8laj2e30J%2bt8mhQPqny1JmSkPjG4fQ%2bcxeg2F28L8kZBHsbo0wPrF8/8n75l/fM3nR/feP906nw59r4cOR%2b21O/Mg49P849Osg%2bP/Q/21Lfn%2bN0FOusKQ59buvxZBGYW16JMU2JahGkZwjAGs1iYRWg3I2c99bQtX42Cn/74i4fdUOT5rRr%2bZgAou7rX9OKOF3fcuOMlPc3JeeJxULMhl8qgVGHfwhNXHNp45IhtDe7n8pOFcT0yHw31R0P9capfRuobmXnsKWdN96bn347j61lyNjQPu9qqSTqWUChCqfEDH7UMIaMgkmBMhJDwiS50A2EQo9LH41zdbWuzQk117IiAZ9c/R775JAayT%2byOGQ2zzm5reFwODoNirnh9jnjU8AEx7m%2bvj/QHv9UO2qzC17fhZhVt7qD7VXh/Z31kfmW3aujeFicZmZWMVa%2bUzWyzCis1VKmhrfr67t%2bqjip/d/lg5287mzvwwQ7crMKtGrK9dGf9IfbNAP8Xk0Z83w2MvskAAAAASUVORK5CYII=' /%3e%3c/svg%3e\" width=\"1000\" data-srcset=\"/portfolio/assets/static/sumerian_scene.82a2fbd.c208c9bb75e1341d1c9511f622c7fb08.png 480w, /portfolio/assets/static/sumerian_scene.97c148e.c208c9bb75e1341d1c9511f622c7fb08.png 1000w\" data-sizes=\"(max-width: 1000px) 100vw, 1000px\" data-src=\"/portfolio/assets/static/sumerian_scene.97c148e.c208c9bb75e1341d1c9511f622c7fb08.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/portfolio/assets/static/sumerian_scene.97c148e.c208c9bb75e1341d1c9511f622c7fb08.png\" width=\"1000\"></noscript></p>\n<h4 id=\"what-is-aws-sumerian\"><a href=\"#what-is-aws-sumerian\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>What is AWS Sumerian?</h4>\n<p>As we've seen the introduction of Apple's ARKit, and the somewhat recent release of Google's ARCore, we're getting to see a whole new generation of apps that incorporate Augmented Reality into its stack of features.</p>\n<p>Amazon couldn't help but join the race by providing a different way in which to allow developers to create an AR environment. While in its present state developers have to create scenes into their respective applications (be it with ARKit, or ARCore), AWS has provided us with a separate option of publishing, and loading our scenes directly from the internet.</p>\n<p>This means that as long as you're willing to compromise and have your AR experience be dependent on having an internet connection (which may be a fairly big barrier to some), you can develop a single AR scene that can be quickly incorporated into native ARKit <em>and</em> ARCore applications.</p>\n<p>In this series of articles we'll be viewing how to get started with an AR Application, then we'll look at how to add your own custom Entities to your scenes, and add a layer of interactivity to them utilizing state managements and AWS Sumerian's scripts.</p>\n<h4 id=\"requirements\"><a href=\"#requirements\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Requirements</h4>\n<ul>\n<li>An active <a href=\"https://aws.amazon.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">AWS Account</a></li>\n</ul>\n<h4 id=\"getting-started\"><a href=\"#getting-started\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Getting Started</h4>\n<p>To begin, head over to your <a href=\"https://console.aws.amazon.com/console/home\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">AWS Console</a>, and under the <strong>VR &#x26; AR</strong> section, you'll want to click on <strong>Amazon Sumerian</strong>. This will prompt a new tab to launch and you should be sent over to your Dashboard, now we're ready to begin!</p>\n<p><img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 1640 875' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-914f0cdfd60b29f18f0d1f88fb7dfcfa'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-914f0cdfd60b29f18f0d1f88fb7dfcfa)' width='1640' height='875' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAiCAIAAABgN0jYAAAACXBIWXMAAAsTAAALEwEAmpwYAAAJ7klEQVRYhe2Ye4wV1R3H988mZUlbdu/M3DvvufM4837cuY%2b9j7nPuZd94T6ABaIkPlpR0qpADViDUqo8VrA8pBaFfVBwkV2lwC4qxWqqFmza2hijbcDGtDW1SVNbU9NS3Wbu7F4WdsVkLVYT535ycnJ%2bvzP3fM85v/OYOtEscGpuQde1PUuWS1YRWCW3dVm5/dpkrgOYxXSxu7LgulLr0nxlcUvH8mi6XbRK6eJCySoBo3D14LWc2dRiJJojqdZEdgEw8jFnQTLfAcxCJNWaKXVpsTKv5wQjX8eJdhjYkiirskhzGs1pYcEICwbDawyvc1KUBRYrRlgxwks2K1qsaPNyjBXtq0oYRIAaB0pcUBKKmQVKk6SlZT0N1KSkpWQ9JapJoHjUQQgRgAmgZGSjJGk5Uc0BNSuqWUnLh0ESRkiKkQlKxAieoESCAhBMNEJ4APZqBWC8CvHRXNlKXMkBwhsCaAjnaNYMYXwNFBdwQsRJyUsJsQ4OkhBClVqu71qyptx2S6Z0g%2bPemCndkJt/cyS1FA5SghTlBJNmVR5EWF6Hg9SUvyEhhLxC%2bzxrtYOu5AB/pLURwlBcoMImL0YVPS1IcVFOcCAawoQQJuCkJ6MODlKNMEHSgqrbdBjMaww1QlgNJMRQrEVzEYaL%2bCkrRH04ECdpFcUFDsRqhVPhQBzFBYJWOBCf0YEVoggaZjiLFWZ4AwdiVFivCjBUI9PktNuJih0vR2KuajiqnqEYFSPEOiRINUK4IBqyEsEIFqp2qk8AJkIYpxhF1SwpZknWi5JWkLS8YpQUo6RZlbAQI2hFNct%2byaUUNatC0GqYt1WrMpNDSdGLIYwX1ZxqutOtqlkW5HQI52nWohmNFWxWiIQ5k%2bUtQYwJotd9OOlNIU8ADzSWVzGCq42sLyCIcZKWl/WCrBcUs7Rw2aqcu0xUs7JeUE03zNs4JStGyXe4lLxqujilMFykKr4wo08I44DiKEZxulUxSryUrAoweRDVDEdSk4qeVrS0rKYEKUYx2sQUCsAEyym6GdeMGB2WkBB9mQDFKEpa3oq1rLzjgWsWfRMon7YAVrBkLUWFNYrRKEalGA0jJYwAEwIghGwIYCQNGFbmBC2IMrXwmjoCQHGsWLOs5/0S1Sx9agI4IaKajqKnJSWpmVkgJRjOoMLaxBSCENKfSA3eyoVdNoVENSdpXqMlLe/3vU9NgKwXJ328dLqAKQ41axXNF5CRtPx0h5oAbxUCtmaVgFYEak4yXM9Zd1kxhRFgQoCvwWdqEAdRNpZsc4oLk5lrUtnOVLZT0YuK4aFZ5TAfJWglV1rsFLoz%2bS6n0J1IX%2bNbfQeckoGUyLs9TnFRJt%2bdznXWrD5BlI3EKgW3xyksTGU7k05HtemeSTVdQU6FcJ7hLBQHPhgBpuQnl9Faiy8jABNIKKxbRTPqSmpG0bOy7ghSygfIGSps4KQUiTfbiRbDdhUjJ%2bs5QU77ANVBCTHMR6JNbXai2XeoWX2QEKvo2Viy1Y43a2ZB1rMXqyuZMB/1BfhtnZErCagOCx3C%2bCDGh3DBByXAJGIQ46ZsVaS/r9VGsvbm2q4XgC%2bxTneYVp1AcYGetYDLgnh6kLFCvBYwV4MAjH8hAPtiBJD/9xQS/RVandgKPn8xoHnLaMWMVgzbS2u75udEAMqms12V1uWF8tJ0ritTWGjY82VvL/NOixxIfKYFQAgJh2jSOz/pFKPjlIKTCkGrJONRPVGJEPLZFhCAiYYA2tAY8gigE0CTmQB69VoP/U8EICEaJwFBiTgpEBTwUlrEqilBeeVwiEZCzCQ0HKSQKSXVl1MQQkNBDwRlgigDV/MeiHdur/rPDIyQnzwGwqxg8iDCsDoHIjSrc6JNsSovRgUpBuRYYwCfUz%2bvfm6Dz7xGdO5XAn5%2bTv28eQ0hCEYDEBQIwIEGqH5uw5e%2bPO9rXw1A3g/2gPH6uYE59Y0zUj%2b30RPAfgIBIYzRjYhhRPSLWLoe0XTTsqIUxaZyLevu37nqnt7V9zywan1vz7Vfv3XNhjX3bl%2b1vveuTQ%2blC80wWWa0lZR5C5a/s%2bPWTTfftc1cuB6L30ZrK0jpJpRUb1t393fu61373U3rNm5eu3HzuiprN25ev2X7itu/jaDs7A9zjRBBULxbciuVcrnsll23PPm4bqm1rVUS5Zu%2bdedfxsfPv/fB7//54bn3x/u23vPK7869dWH83N8v/HV8fMUdq2F2pV4eCy87fdexd977cPz98fEnf/uv2LpXxJZjQvoQxadOnXn512/%2b8ezr58%2b%2bcf7s6%2bfPeJk3z75x/tU/vDP89LMQwjBcZLYCYIIguVwul/eeQn7Kk8vly2VXFJXupct/%2bvIvRp9//qkXXzo5NjZw54NHDp489fKZ0eee/9krv1my/DqEWyHNf9JY8%2bKTb7y3%2b5f/fvDs%2bz967cI3Dp2juo6B5D6STew9MHRk9PSho08dPHpy6PgzQ8ee9vNPPP3c9j37EJRjhZh/e5y9gELhktb7T9l1JUlt71w0cuz44KGhg0dGHtm2ZU159b7v9R4afnzwscNjp04v6ukJ8rcozUel1T/f/NK7b737wat/vnDm7Qvz957jFp0QUvtJNr6n7%2bChHz8zOHJicGR0cOTEgSdGvczw8cMnfrJl194gJnAgPnsBOMnlqwIKhfxkOkGl7Eqy2treNXT4SN/AYF//4KOPDOzZ8Mjx/v0D%2b/ceODj0zKlnFy/pQfiVWvNx%2b/YXOofeHvvTf371t/F1L/wjev9r9rIxrmmAZBM/6D/42LFTg8OjgyNjA8OjXmZ4dGD4xOOjp7fu%2bmEQ42cvIFAVkE5n05msk83XyGbzjpMvFl1J1opu646de3q3fX/Dxs07du48cri/f6C/d9uO3Xsefnz4aGdnd5C/Uc7uj3QPpFefbLrvxdimM/G7n4tdP2K39fGJXUQ4umHrzu0PH9i6u2/rrr6tu/seeKjfZ9ejj629d0vok4yAfxZKpNudfJdm%2bd%2beLl5nq3dim2TUbHGRU%2bhOZTu91OnUTFezXM0qGdH5BK3wUsIp9iTTXU2ZLqewOJHuENVilZJsuAjK2onmQnlJMtuZdxensp1qtbpquVqkIihpjBS5WceAdydGw4ZdbkovMOyyoueBkqkhqlmaNXFSjja1RZNtVmy%2bbpU0sygqDqgiajmMEFkhmnQ64ql2K1Yx7JIeKYqqI6qOpGVF1QmirGLkEqkFsWRbLNmmWV51H0nNeeH78QI%2b7uusfydGccGDmAoIoqx/i61utx4w4u/EE0z2xUUHzydI14C8e/Al1inVGQghMFL0ZGDVL9IzURfCuSDGzgiChjFSBKrXl6KaFb0%2bu4ik5VgQQ9AwgrITeFUuxS%2bZXj5J9V8%2bsjocYkhG48QETssEo87IfwGq/cWwOU4dNQAAAABJRU5ErkJggg==' /%3e%3c/svg%3e\" width=\"1640\" data-srcset=\"/portfolio/assets/static/sumerian_home.82a2fbd.cd6e4e914d62f6392dec23b38eb9907a.png 480w, /portfolio/assets/static/sumerian_home.cbab2cf.cd6e4e914d62f6392dec23b38eb9907a.png 1024w, /portfolio/assets/static/sumerian_home.3cdfdcd.cd6e4e914d62f6392dec23b38eb9907a.png 1640w\" data-sizes=\"(max-width: 1640px) 100vw, 1640px\" data-src=\"/portfolio/assets/static/sumerian_home.3cdfdcd.cd6e4e914d62f6392dec23b38eb9907a.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/portfolio/assets/static/sumerian_home.3cdfdcd.cd6e4e914d62f6392dec23b38eb9907a.png\" width=\"1640\"></noscript></p>\n<h5 id=\"1-creating-your-project\"><a href=\"#1-creating-your-project\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>1. Creating Your Project</h5>\n<p>Now that we're ready, notice how your screen is divided into 3 main sections. To your left you have your navigation menu, where you're able to create new projects to manage them under, in the center you'll notice a big <strong>Create New Scene</strong> button, but let's not click on that one yet! And on the right section you have a sidebar that will throw you information about whatever you selected in the other sections</p>\n<p>What we want to start with, is to create a new project where we'll be handling all scenes and entities in our tutorial series. We'll do that by:\n1. Click on the <strong>Projects</strong> option on our navigation menu\n2. Click on <strong>New Project</strong>\n3. Input <strong>Practice Sumerian Project</strong>, or whatever your heart desires\n4. Hit the <strong>Create</strong> button</p>\n<p><strong>IMPORTANT: In order to be able to import a 3D asset into your AR Scene, they will need to be a part of the same project</strong></p>\n<h5 id=\"2-creating-your-scenes\"><a href=\"#2-creating-your-scenes\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2. Creating your scenes</h5>\n<p>Now that we have a project set up, we'll be wanting to create the following scenes:</p>\n<ul>\n<li>A 3D entity to render in AR</li>\n<li>The AR scene itself</li>\n</ul>\n<h6 id=\"3d-entity-scene\"><a href=\"#3d-entity-scene\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>3D Entity Scene</h6>\n<ol>\n<li>Start by going back to the <strong>Home</strong> of your dashboard</li>\n<li>Click on <strong>Create New Scene</strong>. AWS Sumerian will prompt you for a name, so we'll input <code>example_entity</code></li>\n<li>Hit <strong>Create</strong></li>\n</ol>\n<p>If everything goes as expected, we'll now be sent to the editor screen with an empty scene.</p>\n<p>BUT WAIT, THERE'S MORE! </p>\n<p>In Sumerian's current version, you can't add a scene to a project at the moment it's created. To do that you'll have to do the following:\n1. Return to your Dashboard by clicking on the top-left <strong>Scene</strong> dropdown menu, and clicking on <strong>Exit to dashboard...</strong>.\n2. Click on the scene you just created (be sure not to click on the bottom part of it, as you'll be sent directly to the editor screen)\n3. On the right sidebar, look under the <strong>Actions</strong> section, and select the <strong>Move</strong> option\n4. Click on the project you just created and hit <strong>Move</strong></p>\n<p><em>phew!</em>\nNow for the last part of setting our project up for AR!</p>\n<h6 id=\"ar-scene\"><a href=\"#ar-scene\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>AR Scene</h6>\n<p>We're going to create our AR scene using the following steps:\n1. Go over to <strong>Home</strong> in your dashboard, and look down at the <strong>Create scene from template</strong> section in the middle.\n2. You'll notice we have an <strong>Augmented Reality</strong> template all ready for us. Click on that, input a name for your scene and <strong>Create</strong> it.\n3. Just as the previous step, you can go back to the dashboard and <strong>Move</strong> this scene into your project</p>\n<h4 id=\"wrapping-up\"><a href=\"#wrapping-up\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Wrapping up</h4>\n<p>If you've completed all the things described above you should have:\n1. One practice project where you can manage all your scenes and assets in.\n2. One scene where you will be creating a 3D entity\n3. One AR scene where we'll import 3D assets into</p>\n<p>You may now proceed to <a href=\"https://dev.to/wandererstudio/rendering-your-first-ar-object-with-aws-sumerian-22-1jn0\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">the second part</a> of this tutorial, where we'll go over how to create 3D entities and programatically add them into AR scenes using AWS Sumerian's scripts.</p>\n<h4 id=\"bonus-information\"><a href=\"#bonus-information\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Bonus information</h4>\n<ul>\n<li>AWS Sumerian community on Slack: <a href=\"https://amazonsumerian.slack.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://amazonsumerian.slack.com</a></li>\n<li>Official link to tutorials on AWS Sumerian: <a href=\"https://docs.sumerian.amazonaws.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://docs.sumerian.amazonaws.com/</a></li>\n<li>Twitch tutorials on how to work with Sumerian: <a href=\"https://www.twitch.tv/jsmeester/videos/all\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.twitch.tv/jsmeester/videos/all</a></li>\n</ul>\n"}},{"node":{"title":"Rendering your first AR object with AWS Sumerian (2/2)","path":"/blog/rendering-your-first-ar-object-with-aws-sumerian-2/","date":"17. September 2018","timeToRead":7,"description":"Rendering 3D entities programatically with AWS sumerian.","content":"<p>If you've followed <a href=\"/blog/rendering-your-first-ar-object-with-aws-sumerian-1\">the previous article</a> on this tutorial, you should now have a working project with two scenes attached to it.</p>\n<p>We'll now go over how to create and publish scenes, and use these other scenes inside other scenes inside your projects.</p>\n<h4 id=\"creating-a-3d-entity\"><a href=\"#creating-a-3d-entity\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Creating a 3D Entity</h4>\n<h5 id=\"adding-an-entity\"><a href=\"#adding-an-entity\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Adding an Entity</h5>\n<p>Now we're ready to keep going, click on the scene you want to move into and enter the editor screen</p>\n<p>Since we just want to render a simple 3d object, this is what we're going to do:\n1. Click on <strong>Create Entity</strong> at the top of the editor screen.\n2. Select the <strong>Box</strong> entity on the top-left corner of the prompted screen.\n3. (optional) Click on the box, and change its <code>name</code> property on the right-hand side of the screen, so that you can identify this entity more easily in the future.</p>\n<p><img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 1619 802' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-06bdcce38a756e461fa51a7148a1726f'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-06bdcce38a756e461fa51a7148a1726f)' width='1619' height='802' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAgCAIAAAAt/%2bnTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAJUElEQVRYhb1YSXPiSBrlMJeJiS4bMJtBKxJSapcQArEjCVwGtAG2q7vGdnntvszc%2bwfMpWNOc5yYvzD/cUJKI8u4cLs6evrFs/zxZabye7mnMgzQCUoolJBiGSPqACdBs9XjRF1uOtP5rXN61R2GmjHN5SulCl4sY68pa1ZvGAwmYdP4KCiWpI67A88ceAzXPioixfJXShVKqKRNeqOw03clzQHiWFAsteUM7ZUkD9TO9C///cef/vV3vIKVy9UP32UPD/I7zB7mP3yXpSgmIyg2w/dZvg%2bfrNAH4ogTWpblWPaJbZ9Y1mxiOcPReDiaxByn7IiWPbWdj870o2WfTKLMUyvmeGKnikx2OLGmjvPRdk7iUlPLjgpGxSfOaGKjf92gG59lVARjawizjyjGZihGB7xBUApJK/WGRlJKFeUVrfPTTz8%2bPj48PNw/Pj78GJuPz3iIkyDu7%2b/v7u/v7u5uoXF/FzOyt7iLXPG/GLe30d/tzc3Nze1txLu7yAMTH%2b7vb29vNdDh65ogmTgpEXU5TTwmNEi6mak31G5/KsptQTJ4qU3SUrFcVzTz8fHhblvPbYS7qMKbuNoXxs2XL1/iZ2RcX39JcH19fRVja6SfV5eXkf/y8upymwcClgVi88NhPps9yuWKuVzx8PAoYTZbyOWK%2bXwxmz2q1qhMA/QkzeqPPEmbxONnQIOu0Zl%2b/vzD99//8OklLi4u4DM2nu2Li4vz83P4hDg7O4MeiLMY5%2bcRIbbO8x1AJwu0g4NcLlc4PMzn88VaFT0%2bRlCUqFbRwlH5MNZ2eJg7rlKZQhljgCSrbQZIDJAZIBeKCMOKnz5drNebdYzNZrNaQSOyE8CkxIZYwayREdkQ6TwwQ5K03ubcVrVZrzcs0I5rNIoBBAMoBnjRkNSuIHUAr%2bMEj6AsggEEZVCMyyRrS6mClyp4%2bZg4KiIskDab55qSitNYr9fhFkEQhGGYJIWrZ2c6D0SU4SVWWw8sEgQB4PUG1%2bXlCSeNWGGotWa9odfqzuWmwwpDThpz0oiTxiSlRgLSTAuA9SV1p2PyfT/tgREkqStvtfKeZcDMEFB28hNix%2bMHAcs1aWBy0qTB9Y3ufDAJWubHlnnaHbqaccIKg2ipFMfEHgEoA6T1avX1t8dIkmCq53nQuVgu5tPT6dVsdnXizT3P9xLBvu8netIvCVLvgX7P9xlWLRRq5QpaKqHlMlap4JXjJ5YreKmElsposYTUUGaPAFZcrVZxVL63RbrKp5q2CMPQ87zRaNQyWoZs8BeSuFJMzTTaRr/fXywWMEpYxH8Fz/OSVtgKULLZQj4fLUFblnL5Ui5XyuefmMsVarXGXgHJOEm3ULr9kuiDIJjP5wzDsgzLczwvCLwgilKETqejqqrjOKvVyn8T4baX4Js5oY2TSp3SSFqrUxExQsIIiSClaGeIGW8Ryls98DrWdG%2bk5S0WC5IkEKyCYihRQ6kagpAoiiCKosiyfHp6Goah67qv35MANg20l0tXVHoN0CYpFZKoKy1zqRme3Jwr%2biKh2lrsFRAEwb4ad3rf9/zF8pQlNa50gmAkVyf%2bVnYJEuA4qsQ4PT3dmUXpnkzDdT0/ErCU1QEDOmkBnb5vDtatrm/0gojdQDe9twTEw/rpvfuaKoHruQ2KJWs8jpJtitZkHcfqGIaqqgoFvC7iv8Iq6vNIoed5sjqo0820ACCYSnMsKn1RGUjqQFQGvNSrM/qvzAGI9IqeOF9GEzQaNILV6jh%2bXmDIGoIRGIZhUMB8Pv/qONxB0jTL5VJSejs9wEt9TurjVJOkWwStk7RONloUY7w9hKIxlPT4TsulR0W09QCAoRhJEFUSxwkCx3EoQFXV5XL5HgHedi2CAkRlxIA2QakkrRGUKipDrWVL2ljVLYY360ybYg2K3S8gDJ8H63sq5nm%2bWq0iCIIiKIqiUftjmKIo4/EYhvVOAb7vLxZzw5wP7auhc9kenBu9tdHbGL2zmNDYJPyKgEIp2sjifeAbYNu2aZqapomiCACo1%2bsIgnS73Z2deGf6ei8Bu3axmLd73mh6P5zeDuybt5nZnoKIhNl8tcGI4f5VaF/jhWEITwrL5XKxWEynU9d135i%2bO4MwmWzREFKHQLJ5xRHV6R46kBmM5CvVeqkSySiWMQSjOaEpSPo7R22CZJlPz5z3F/e3gOsExxuAa9VpGcE4FOf3EuMznNgjKRkjBIwUUYKnGqqqj2TF%2bMb4vznir8J13SAIlsuFYc4nsy9D%2b7Nuhq3uqtVd6eYzm51AkEaCPJDVcXShoZg2zXYp1qRBlwYmQjQBrweB/wdHDxH3vCupQ0GJxgkvWZxk8bIlKPYzZYtmDIrRG8DIjCaBPVtPnNXJ/JM1XfVHnr%2b6NnuWu1x6f3j0XvS26I8XDBbokmwKUkfR%2bgzbRDEewwUM5yFxIjoL4aSUYXmDAa0G0FnOYLgWzeqc2FHU9jvnwO8bfQKlNZGalqo7atNuGjNeGpB0k2roVKO1pU5SWp3WMorW5gSN5RSMYPOFarGEHuYqDUZYr5829q%2bud/%2b/6P14HzD12aB/YfTP2/3z9uDC6J8ZvfVoeh39jHjR6m44ccCJgwzVEHhRb7DRbbiG0qUKXihFt%2bT0Tpw%2bfr2s6xtn%2bnsEeN7Sdcnrh6L3Ccc4nBRxUkQwDsE4jBBQjIOMPChDUmKmUEKTC/GvnkZ3rlG/e/ReLGDuedh//v3nn39GSsd0A9TrjXyueHCQOzjIJV/mPnzIlss1AMTfeJxOX3feHma/Aa7r1nQz2xCKxVq0QZXRQgkplJDoGrm1y8d4oYQcFWrfLOD1uE/vrL%2bLkuVySZMMXiGZuiICA1AaRYpYQwGySbJNlJJxSmMFk2RaKLGnBxqs6AfB0vVcL8XtlEjfraA/wQtBKTE7edz99DxvPl8AQRXZpsYP24qt8yOZMxl1pHRO%2bOaElgasOJa0GS87FGtminG/JCxVsHyhyrDiOr5Sps8qYRh90gnejeSbz9O3oqcvL/C7yevMgeu6l5eXv/zzl1UYAkGVWE1juh15ooOexBq03OebE1YdUUKXEYZSc8rJVp1pZ14fMGooRzOS7Uwt20nTdqa25cRfrd9HmDmmbU9te%2bo4M8eZ2c5sXxFnOlsslqPxRGm2dbkjNzotcaiBnsi2abnPaWNWGVKCyQhDXrGANK4zxv8A1x8EH3UreegAAAAASUVORK5CYII=' /%3e%3c/svg%3e\" width=\"1619\" data-srcset=\"/portfolio/assets/static/sumerian_scene_box.82a2fbd.e3dac004e2dc6cb89275c72dcd5ed024.png 480w, /portfolio/assets/static/sumerian_scene_box.cbab2cf.e3dac004e2dc6cb89275c72dcd5ed024.png 1024w, /portfolio/assets/static/sumerian_scene_box.6d3ada3.e3dac004e2dc6cb89275c72dcd5ed024.png 1619w\" data-sizes=\"(max-width: 1619px) 100vw, 1619px\" data-src=\"/portfolio/assets/static/sumerian_scene_box.6d3ada3.e3dac004e2dc6cb89275c72dcd5ed024.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/portfolio/assets/static/sumerian_scene_box.6d3ada3.e3dac004e2dc6cb89275c72dcd5ed024.png\" width=\"1619\"></noscript></p>\n<p>As AWS Sumerian saves all changes automatically, we're pretty much done creating a basic 3D shape that would be rendered on the screen (Though you can feel free to make it as complex as you like).</p>\n<h5 id=\"creating-an-asset-pack\"><a href=\"#creating-an-asset-pack\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Creating an asset pack</h5>\n<p>On the bottom left corner of the editor screen, you'll notice an <strong>Assets</strong> section in there with a variety of icons and a tree hierarchy menu. </p>\n<p>That section is where you will be able to create Asset Packs, which can then be shared between all scenes in your AWS Projects. To add our own customized pack in there, follow these steps:\n1. Click on the <strong>Create Pack</strong> button\n2. Select the newly created <code>New Pack</code>\n3. Change its <code>name</code> property on the right side of the screen, as this is a name you'll be referring back to in other scenes, you want to be able to recognize your assets\n4. Drag the box entity on the top-left right of the screen (in the Entities panel) inside your new Asset Pack</p>\n<p>If everything went well, we now have a custom pack with a 3D entity inside it, now all that remains in this step is to make it accessible to other scenes.</p>\n<h5 id=\"exporting-asset-packs\"><a href=\"#exporting-asset-packs\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Exporting asset packs</h5>\n<p>To export any Packs you create, you just have to hover your mouse over the desired pack and click on the second icon to the left.</p>\n<p>This should prompt a modal that will ask you what kind of pack you're going to be exporting, in this case we're exporting a pack in the <code>Entities</code> category.</p>\n<h4 id=\"handling-your-ar-scene\"><a href=\"#handling-your-ar-scene\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Handling your AR Scene</h4>\n<p>Now that we have a readily available 3D asset on hand, we just have to enter our AR scene and make use of it!</p>\n<h5 id=\"scene-elements\"><a href=\"#scene-elements\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Scene elements</h5>\n<p>Going back to the editor screen of our AR Scene. You'll notice on the left side of the screen that we have the following entities:</p>\n<ul>\n<li>AR Camera: The initial point where the scene gets rendered, with the coordinates <code>(0, 0, 0)</code> on an <code>(X, Y, Z)</code> axis.</li>\n<li>AR Anchor: An anchor is a coordinate you can use to attach entities to your scene, the AR Template comes with an anchor automatically placed at the <code>(0, 0, 0)</code> coordinate.</li>\n</ul>\n<h5 id=\"importing-assets\"><a href=\"#importing-assets\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Importing assets</h5>\n<p>The first step we'll want to take is to import our asset pack to the scene.</p>\n<p>Just click on <strong>Import Assets</strong> at the top, select the pack you want (notice that there are many pre-made options in there to play with as well!), and hit <strong>Add</strong> at the bottom of the menu. This should add a new pack on your <code>Assets</code> menu.</p>\n<h5 id=\"adding-a-script\"><a href=\"#adding-a-script\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Adding a script</h5>\n<p>At this point we <em>could</em> just drag our 3D asset into the scene and render it in an app. </p>\n<p>But I found that most real apps are more interested in programatically adding objects to their scenes instead of \"hard coding\" them in there. To accomplish this we'll be having to use AWS Sumerian's scripting functionality, which will require you to know a bit of Javascript.</p>\n<p>First thing we want to do is adding a script to the <code>ARAnchor</code> entity:\n1. Select the <code>ARAnchor</code> entity on the top-left tree hierarchy menu\n2. Scroll down the properties pane on the right side of the screen, to find the <code>Scripts</code> section\n3. Click the <code>+</code> button to add a new script, and select the <code>Custom</code> option</p>\n<p>This will create a script template that contains a few life-cycle functions that are triggered at various times. </p>\n<p>Over this example we'll only be working with the <code>setup</code> function, and adding our custom <code>parameters</code> at the bottom of the file.</p>\n<h5 id=\"instantiating-an-object\"><a href=\"#instantiating-an-object\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Instantiating an object</h5>\n<p>We'll need to load our custom-made 3D asset into this script so that it can be rendered, for that we'll need to add a <code>parameter</code> for our function that can receive said asset:</p>\n<pre><code class=\"language-js\">var parameters = [\n    {type: 'entity', key: 'exampleEntity', description: 'Example Entity'},\n];\n</code></pre>\n<p>Note: You may call the <code>key</code> and <code>description</code> values whatever you wish, however it's recommended to keep it a value relevant to the asset pack you'll load into this parameter.</p>\n<p>At this point you may save your script file, and you'll notice that a new slot with the <code>Entity</code> attribute appeared on the right-hand attribute menu (inside the Script section). </p>\n<p><img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 332 124' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-6612b8d0648f961550836a6d825b2ce6'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-6612b8d0648f961550836a6d825b2ce6)' width='332' height='124' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAYCAIAAADF1mwTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAG0UlEQVRYhdVYaWskxxnWn3B2hRyhtTSa6aOuPudo9T3dPX3M9Nw6omMlrQ5L3kNeXxBD8AfjEEEgISYQyKdAPgT8KT8wqa6WNNauV2PYQAwPLzXVb83UU/W8T1XPwqPFlQ8e/foXikeLKwuPlz5aWUUrq/j/AU9u8Jb%2btTfz0eOljxaWlqtQCuaCHM6b%2bTOB5BDJtAFIG0rt2X4WReLzyGM5rJNhablKCYjYFbErIIcDNiAeD20BOTy0OWDzkIITLRG7HKDxf4GqYHLAFrGHlFDAPgecYhrOk0pDxG5NNCUtapq9mmgC4q1WWzXRAsQTsVsSAMRf543B9MXLz/%2b0zhuGM9lwp7KeNM1h0xpqza7pbYrEd4IdrIQCckXsvS8A4tVE66uvv4uzXQG35eY06p7lk4sKtwFI%2b7vrv7SsXGumly9/e3L%2bhRdOBeQdnnya9Q9qog2If7sDHgesljVK8rMK19pwJv3J8zA9CtOj/vT5cOtVkp8SrbO597lcT3novEcCIqYr/a8f/n14clXhnddfXX97/bdO9%2bRJpfH76%2b%2bv//jXJ5VGlh/sH70ajJ%2bNt86qgvnn7/9%2bdPp6rWZAaYYAFRl0aqJJ91EOiNohagcQX2121UYGpTYgPsP7nT0gHgfsND/QmikP/d7oMkxPoNJDcuAF0wpniNhb503LG013zoViblBqEzVkw2cIzEBALoOIXR46PHRK2cwtHgE5rKhYFGi8DxGVCSJ2K5zBZF0UAy0AATnr/EYxnCZwwK5wRjGwnN67CPwE5l17QNpYjaEUYjVGSoSUDpKj2wZWYiSHWImhFNylyRFWEygFhLZDRHOicjgd20FKRNQYSIGIXSaHtxC4pSUg902pMDsq1uzdgrbleq4ZYzpLNQNSRLSsmEpMtBSrMfso6V2kRJLehXIk13tIjuSbHqx0JJ3mEC0laoLVhA5ROmpzqDQHAnQq3EaxXf4MAURpQTkofNOBUsABi4mHh9RbBeQq9VSpZ7qRF5v%2bDg4ukNqsNLVGx3R6PLABdokaFEtANVNoslQXknwe2iJyi9Upo1AklPEGIvagFPDI6Q0PDXvAAack8OFylYe20sjG21fp4Lw3uuiOLvrTF/n4MumfRdlRf/JcN/JscD7ZeZ3kp7fs365%2b6Mj1HtGzmmidf/wiH%2b6tCzZWwjjbcttDxx9E8aYfjpPutt5KHH8YJZs1KnpfZN9ZfvOPI/EF5BItgXJqecN//POHr3/3h6pAp1HugIBcJActe9w0h6a32bJGbri74Uwa5tBwJpa/jeSgaQ1b9pho8UPngAupUj1IvIOnZ5abVwVTxK7ejOtGotYjtdFx2gO9FWMlwHJb0SO2Lffqvqz%2b2aKnHkgt6PTiy5tzYKYGBEQPWg7QQ5cDdk00y4/Aqolm8ZQezA%2beYgJ0JL0r13NA2kAKAQmQ0oH0LhAABikUcfGIXgo6ALdZQaMydqAUsiFIjujlhTWkgH5tI%2behvVZrrfMm2597LuSLmDn9neW/2XjIQF0oh3I9x0qsNHKiJZLeJVoq6ZmkZ0RL5XoPqwlNUDtFGo1IuWtjJZb1HlHLgcXYLqFDeliJi2OKuZD7Vhuls581pZlJz2WjAnKIlqqtIVIirKZIoYbDzIRyoAS6klbMRqUMMYtKR2n0CwK9ggx9Sh1JSySN0mZLgNWEpqmxbkwkLROQc58A00l5r5ID/kY21I7m0A%2bjzfxexG7L6mOlPDKJGtWoMksIyK0KFgNXeB3rv93tu7Wj9U0jk4aIaUHTw0GOBOTeupAj68lo%2b8ryt0xvq77R33CnYXq04Uzb8UGYHgbJoWFPJP3BCmY7kAASmu7ADSZ%2btMkBu250D46vhtOTpLcXd/ey/tO6kXWy3d7wsD8%2b3tq92Nn7ZDA5tv3xfJtM1wgrcbkDswTi3kk2%2bJhO15lE2bHf2e90n8W9Ey/azyefaM0u9ey5CAS2P7K8UbuzxUGHEjh6tb17Odo8fXb22esvvvHCzZ29y63di9/sP98/erm1e/H0%2bGr34MW6YD5YafcJzEqovGwU900oB9TObpZc1pP5JQSlCBDP8kaSRjdaQFRChRqp5WvNlAOOgErRAkJfANRGipWQh%2b5MHd5jUnbel9DMC83tHY7a%2be1Niz1ibv0gBGRLeqobE7pIahcp1HCKQsxu7KgL5aJk1VipF7EoX0nPEe0flD2FU7F8isK%2biJbIRcXrxoRoqYDsUkLUsx9CcYWaD9SF22DmFbQYHoCZd8VbgLLz7lGZPBMhizNpxQ/RX/lwubqwuLS6VlUrNe09Yu3HcU5Ufs5AmlBVF5dWFx4trvzq8fIvFP/9W%2bU/gS3BVteFm3QAAAAASUVORK5CYII=' /%3e%3c/svg%3e\" width=\"332\" data-srcset=\"/portfolio/assets/static/sumerian_script.704bf03.8d2a48f1d6669e2d42fc82dd3ea8b9fd.png 332w\" data-sizes=\"(max-width: 332px) 100vw, 332px\" data-src=\"/portfolio/assets/static/sumerian_script.704bf03.8d2a48f1d6669e2d42fc82dd3ea8b9fd.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/portfolio/assets/static/sumerian_script.704bf03.8d2a48f1d6669e2d42fc82dd3ea8b9fd.png\" width=\"332\"></noscript></p>\n<p>At this point, you can drag your asset pack into the empty slot and the name of your pack should now be seen inside that empty slot, and to finalize the process, add the bit of code that will instantiate your asset and place it inside the AR world scene:</p>\n<pre><code class=\"language-js\">function setup(args, ctx) {\n    const arSystem = ctx.world.getSystem('ArSystem');\n\n    // Creates an Entity and adds it to the world\n    var x = 0;\n    var y = 0;\n    var z = -1.5;\n    var translation = new sumerian.Matrix4(\n        1, 0, 0, 0,\n        0, 1, 0, 0,\n        0, 0, 1, 0,\n        x, y, z, 1,\n    );\n\n    var clonedEntity = sumerian.EntityUtils.clone(ctx.world, args.exampleEntity);\n    clonedEntity.addToWorld();\n    clonedEntity.setComponent(new sumerian.ArAnchorComponent());\n    arSystem.registerAnchor(translation, function(anchorId) {\n        clonedEntity.getComponent('ArAnchorComponent').anchorId = anchorId;\n    })\n}\n</code></pre>\n<p>To explain the code seen above:\nFirstly we instantiate <code>ArSystem</code>, a built-in functionality in Sumerian that allows the user to perform some functionality native to AR. View documentation <a href=\"https://content.sumerian.amazonaws.com/engine/latest/docs/ArSystem.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">here</a>. </p>\n<p>After that we set the <code>x</code>, <code>y</code>, and <code>z</code> values that we want our 3D entity to be rendered at, and create a transform value from them to be used later.</p>\n<p>We then use the <a href=\"https://content.sumerian.amazonaws.com/engine/latest/docs/EntityUtils.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">EntityUtils</a> to generate a clone of our <code>exampleEntity</code>, which we can receive from the <code>args</code> parameter, and add it to the World. </p>\n<p>As AR functions around tying Anchors to virtual objects, we now need to take the extra steps of attaching an Anchor component to our <code>clonedEntity</code>, and then register a new anchor from the <code>tranlation</code> values we set earlier.</p>\n<p>Lastly we set the <code>anchorId</code> value of our <code>clonedEntity</code> to match the one we've just created, which will result in your object to be viewed at the position set on your <code>translation</code> value.</p>\n<h4 id=\"loading-the-scene-in-an-ios-app\"><a href=\"#loading-the-scene-in-an-ios-app\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Loading the scene in an iOS App</h4>\n<p>Now that we've set up all the logic behind instantiating nodes and anchors, as well as rendering a 3D entity in real-space. We now have to test that with a real device. </p>\n<p>The first thing you want to do is <strong>Publish your scene</strong> using the top menu of the editor screen, or hitting <code>Shift + Ctrl + P</code>. Then you may follow these steps to\nrun it on your device:</p>\n<h5 id=\"running-on-ios\"><a href=\"#running-on-ios\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Running on iOS</h5>\n<ol>\n<li>Clone the <a href=\"https://github.com/aws-samples/amazon-sumerian-arkit-starter-app\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">SumerianARKitStarter</a> repository.</li>\n<li>Open XCode, choose Open on the File menu, and then navigate to the SumerianArKitStarter.xcodeproj file in the top-level directory of the cloned repository.</li>\n<li>Set up your code-signing identity and provisioning profile on the General tab of the application settings. See <a href=\"https://developer.apple.com/library/content/documentation/IDEs/Conceptual/AppDistributionGuide/MaintainingProfiles/MaintainingProfiles.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Apple’s documentation</a> if you’re not familiar with these concepts.</li>\n<li>In XCode, open the <code>ViewController.swift</code> file. Change the <code>sceneURL</code> variable to point to the URL of <strong>your published scene</strong> from the previous step. Append <code>/?arMode=true</code> to the URL. This parameter causes the scene to render in a way that’s more amenable to an AR experience (specifically, it enables the alpha channel on the WebGL canvas and removes the UI elements).</li>\n<li>Connect your iOS device. Build and run the application.</li>\n</ol>\n<h5 id=\"running-on-android\"><a href=\"#running-on-android\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Running on Android:</h5>\n<ol>\n<li>Clone the <a href=\"https://github.com/aws-samples/amazon-sumerian-arcore-starter-app\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">SumerianARCoreStarter</a> repository.</li>\n<li>Open Android Studio, choose Open an existing Android Studio project from the menu, and then navigate to the SumerianARCoreStarter directory in the top-level directory of the cloned repository.</li>\n<li>In Android Studio, open the <code>MainActivity.java</code> file. Change the <code>SCENE_URL</code> variable to point to the URL of your published scene from the previous step. Append <code>/?arMode=true</code> to the URL. This parameter causes the scene to render in a way that’s more amenable to an AR experience (specifically, it enables the alpha channel on the WebGL canvas and removes the UI elements).</li>\n<li>Connect your Android device. Build and run the app.</li>\n</ol>\n<h4 id=\"wrapping-up\"><a href=\"#wrapping-up\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Wrapping up</h4>\n<p>Hopefully by following all of these, you've now been able to set yourself up with an AWS Sumerian project and you've grasped the basics of how to import your own elements of a scene, and make them appear on your screen on both iOS and Android devices.</p>\n<p>While still in its infancy, the possibilities of hosting AR scenes on the web and having it be adaptable for all types of mobile devices is very exciting for me, and although this was a very shallow view of what you can do with AWS Sumerian, I invite you all to join the <a href=\"https://amazonsumerian.slack.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">AWS Sumerian Slack page</a> and become a part of this exciting initiative.</p>\n<p>My apologies if the writing of this tutorial was too messy, I'm not yet very experienced with writing articles like this, but I hope that I can improve with practice :)</p>\n<p>References:</p>\n<ul>\n<li><a href=\"https://docs.sumerian.amazonaws.com/tutorials/create/intermediate/augmented-reality-using-sumerian-arcore/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Running AWS Sumerian with ARCore Tutorial</a></li>\n<li><a href=\"https://docs.sumerian.amazonaws.com/tutorials/create/intermediate/augmented-reality-using-sumerian-arkit/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Running AWS Sumerian with ARKit Tutorial</a></li>\n<li><a href=\"https://content.sumerian.amazonaws.com/engine/latest/docs/index.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Scripting API</a></li>\n</ul>\n"}}]}}},"context":{}}