{"hash":"b8a47efecb6bedd1a375ce1c8213d6d52a248002","data":{"tag":{"title":"A-Frame","belongsTo":{"edges":[{"node":{"title":"Aframe Keyboard Library","path":"/blog/aframe-keyboard/","date":"12. August 2019","timeToRead":3,"description":"","content":"<h1 id=\"project-recap-aframe-keyboard\"><a href=\"#project-recap-aframe-keyboard\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Project recap: Aframe Keyboard</h1>\n<p><img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 1851 936' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-9c35af3825994e9c489ab8ea9dcf4204'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-9c35af3825994e9c489ab8ea9dcf4204)' width='1851' height='936' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAgCAYAAACinX6EAAAACXBIWXMAAAsTAAALEwEAmpwYAAAKhElEQVRogd2Z6W%2bU1xXGp2qlqm3%2bgiiqlPZLmi9V90hRSmkrVbRNYns8nsWz74vt2PEGjQkBJYEAgagJJIDUqC0Ri02UGGM8xhhoSIBAXAiLwbGZ8XiZffHG4JT6V93rGWdw3CwQoOXD0V3mvu97nuee7d5RxONx7kaJxWKfGkej0TkRc8lkEsXdDLwQdCKRIJPJMDk5STab5erVq1zNZu8eAhYCLkCPj4/PAs5myU5OMpHJkInHSYnfR0f//wlYCHgqlWJqakqCnhofl4AF2Njw8JzER0akKO4W8AK48OkrV65w9coVxpPJOdDxHGAxni%2bKW62caPNSOF4IxM28f2JiQu64AC7A5ne5EOxCJChuxw4VkpA30/lz/23tfLLmrxV%2bns2Zen7HPw/0bScglUqRTqdlX5jp2NiYnBPKi3nRFgISa0SbJysSiSxIolgzffUqY2Lt0NB1YD8P%2bC0lIJZTUKSdzs5ONm3axJkzZwiHw1y8eJEjR47Q29vL6Ogo58%2bfZ3h4eA6Q6AeDQUZGRiQ5Im2JgJYnSrxT9AWJzMwwnkhIIKlIhHQk8qXAJ24lAULELh89epSWlhZJgpjz%2b/0sX76crVu3SnJEu2/fPkKhkCTotddeY/v27ZIkITt27GD37t309PTQ19cn506fPs3g4CA9J04QuHSJoYEBQgMDDPT2zoHPR/k7QkC8gAhhzqJ/4cIFSYgAKXa%2bv79ftmK3hVWInRdjAe7s2bMMDAxw/Phxdu3axRtvvEFXVxeXLl2S47fffps3m5vZsmkTr2/bJlt/WxstO3eSDIe/MPjE7coC%2bTgQE2Yu/DwWJ5Xze0GQ%2bC3/XN7ExbxoRSEjRIyFSJeYmCDY1yfBhgcH5e5Hh4bov3CB4Ecf/W9YQEwAF66QdwkRyNJJohOZWRlL5%2bavzwj50nX%2bWLxTtCLii6CXzAEQJAj/z8eBfBa4rQTEFkpdOfDxaIxYIi5BJ/uCZLpOMrb3KKmT54iJ6D2WIS4Ai7WfUTPkY0p2auq6Sm6%2b3LYgGJunZOFJa04iUaLJBLFwhMmX9nDt8VXMLGpk5pd1zCyuZdq1luTx00SERUQiC74j/x3RF65wZWLiuspufuq7rUEwllNO%2bKrw3esknSEzNkYmkYS6bfBQPSxZBY8%2bB0tWwG%2bXws89sLiCyWP/JJOdIrPAe2TsyBEsytxsJiOBpQXxBeb%2bRXf8lljA/v37Zbpqbm6ekz3NLTS3vkXb6pc5tNhOd1E13SW1HFY1cPjRKo4scXPkDy7eeURHh7Ga1vZ97G3dS1tbm5T29nb27t3LsWPHJAmiGLp27RqWxx%2bneNGiOf%2b/GfCJr4qADRs2YDabcTqduN1u7Ha77LtcLipKtHh1RnylOnw6ExVqA161Hl%2bpFp9aj1elxa3S4rBY5DMOuw2HY/bZ8nI9W7ZskXW%2bIECc4R9%2b4AEUCgXPNjQwPTlJNBT6UmnvKycgGo2yfv16jEYjDodDKi7EZDJRWVGBU6WlyuvDrtLitTpwavX4rHZcWj0OvQmbXkOFz4XDVo7HZcNh0VLhceBzGLGYzbIwEgSI%2bmH644/RLlnCdxQKfnTffYSDwZu2AsWNgf%2bEgNFIhDVrXsBgMMztvFBcWILFaKJKqcGuLMOn1OAo1eBVanAqNXhK1DhLNLj1agnabddiM2tx2TSzrbmMUmUJmze/KoOfKI1ngJX19XxLoeB799zDuVOnZs8B8w5At8ECYjkCEqQiYVateBqv14vVapXAPV4vepMJT0UF1jIdDqsda0kZXqsdp7pcWoBTo8NjtuEw6bBbjRK01%2b3AYdFQ6XXisRukFYkSWgRDUSUKCzjY3s49CgU/vPdeWQTdMQuIxmJkEgneGQrjbFqB1mxFbXeidrhQ2RyU2F2Umq0o7W5UZivlejPWUjXu4jKcKmEFasxFKpzlKpxWnbQAh0WH26bBbtZS6TLh8/l4%2beVXZBDMp0SRCX52//2sqK7mWjZLJBS6qUyguFECIrEY2WQCT3%2bMh2qbcNntqEwWdHYHRpudUqMJr89Hid6Ay%2bOhqLwct8eDrUzEAjs2tQ6H0YzNNOvzTtusJdgtGixGHVa9kpLiIjZu3ChLYAFeBMLJqSlOv/8%2bQ/39MhXekSwQy1nARDKJ4%2bIIi%2bqaMNmdPKY3UmwwUma1UWwyU2YyU2S2SBKKTBb0ZRpsxaUYi0sxFZdiUGuxWXXYTWrcdg0Oa94CdNRUutFqNKxbt27ubkB8W5AgYsFEOi3r/ztSB8RyQTCTSmI8F%2bJXVfUy8lfV1eOtqkJlNKE0mNCbLRQbTFidLorLDZhtNjR6HTanE53VjKOiArtVj9dplRZQ4XXgspVjMWqpq6lEq1Gz5oUXPn1bFI/LixBR%2b99I%2bXtTBMSkEqKNkkylUJ%2b%2bzOKKJ/H6KqhpXIbF6UZpNKM0W9Fa7RQZzWhtDtnqrBa0NjM6m0USoLaYsNvKsRtVeBwarEYVbpsan8vEk5UubFYzq1evISbOE3OBdzb1isAoSCgEfyMkKL48%2bBwB4oSWzlB8so/fVdejNlkoEWAtNhn8isoNlKg1KDU6imWrRaXVoNJoUKnVqMrKUCpVlGtUGPR6jHo1Oq0Wg06Fz%2bNh1cpncDodPNHUyODoMJlEikgsKg9MeRJEepzOZj9Fwi05DMUKLidFAMzE4gyn0/z6vbM85q5kWU01TU89xbLGRsxWG0q1FrVaTZlGg0arRakpp8ygR2sxonPZ0Fc60dVWUtdgY31TORuet/Dqixb%2bvsnG7s1m9r5YynNbG3F2vs66wGH6osOMxZMy9hRawpggIecOhfXAQveDC50eFZ8LfF7ZKxQYi6e4HAmxNnyKBw8d549Ln%2bH3T63kN7XLeKS6gYcblvOLpmf5ycq1PPj8S3x39WZ%2bvHkbPv/r1LyznZpjO6n7oJmqc21sPvMXZs77IFwD8XoI10GgBo4Z2NPzZ2oiR6kNtNMU7OJ4uJ/x%2bOzhqJCEdCbDx9PTjIuD07zr8PnukRb/H4TDsk1FIp9NQKHf5T8qFDgR7mdF8CA1wQ6%2bf2mIb56J8%2b3eFN9ofZev7fSj2HMIRcshFLsOoXjzED99rxtfoJtlo900jnSzdPggjUNdLA0doDZ0kL8G/k5oaBXZ0aXMhGr516Vqgicbef5iC7XBAywLdFIX6JDSPnKOTDxJQoAvICF/PS7uC5I5aygEL0APX77MwY4O/tHdzYH2dnrPnPliLiAvI0TVF0/QOvKhVKQ24Kcp0IF18F2%2bPnwNxeC/UbQdRyEI2NGFYucBfnCgE2evnxUhP8uCfhoud%2bRE9P00BPw0Bvw8EThIXeAAa4Nv8UpwNxsvt9AY7KR2sEv%2b3hDsZGmwU85VB/bzt%2bFTEnw6/kl6zB%2bZZVyYnmZqbEyCzv8VJnZcXJr69%2b%2bn54MPONzdLS9VP9sCcrsu2B6MjbJt6ARPBNqlIkKh%2bmAnTwf2URLsQXE5i6L1XUnAffsPoP2wk6aQnz8N%2bqkPdNIQEAAEaNGfBS6AiXapGAf9PBnoojogLKtrdn3BGvlM7rtCh5dCR/koOix1m/8XWTyRkAWTiA2TgohIRJIR6u%2bno62Ng34/7a2tnOvp4T8RyX6oh4q8sgAAAABJRU5ErkJggg==' /%3e%3c/svg%3e\" width=\"1851\" data-srcset=\"/portfolio/assets/static/keyboard.82a2fbd.83de84cdea5c8e7965536283d7d8be50.png 480w, /portfolio/assets/static/keyboard.cbab2cf.83de84cdea5c8e7965536283d7d8be50.png 1024w, /portfolio/assets/static/keyboard.5a9d7c9.83de84cdea5c8e7965536283d7d8be50.png 1851w\" data-sizes=\"(max-width: 1851px) 100vw, 1851px\" data-src=\"/portfolio/assets/static/keyboard.5a9d7c9.83de84cdea5c8e7965536283d7d8be50.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/portfolio/assets/static/keyboard.5a9d7c9.83de84cdea5c8e7965536283d7d8be50.png\" width=\"1851\"></noscript></p>\n<h2 id=\"project-description\"><a href=\"#project-description\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Project Description</h2>\n<p>All forms of complex tools online, from social media experiences to productivity tools, rely on the same common denominator where <em>user input</em> can be received from a given user, and processed in any number of ways.</p>\n<p>The problem I found when attempting to develop prototypes for Aframe, was that the most common keyboard libraries around relied on static images being overlayed on top of invisible buttons that corresponded to the letter that they were representing. While that idea worked great in terms of having a light-weight attractive keyboard, it wasn't quite so good at allowing keyboards to be easily customized to other languages (think accented letters like <code>Ã¥</code>), or at giving quick options for the keyboard buttons or background to be switched out into a different texture.</p>\n<p>With these challenges in mind, I gave my honest attempt at creating a library that would create its own <a href=\"https://aframe.io/docs/0.9.0/core/component.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Aframe component</a>, which would draw a sequence of panels (some invisible, and some which would represent the textures or colors that were decided upon), and that it would allow users to input information on it by either clicking the keys through the browser, typing through their own physical keyboards, or using laser-pointers to click them from inside virtual reality.</p>\n<p>I did my best to ensure the keyboard can be ready to use right out of the box, when the amount of code needed to make full use of that includes only two steps:</p>\n<ol>\n<li>Adding the <code>a-text</code> tag that will be modified and add an <code>a-keyboard</code> attribute to an <code>a-entity</code> element</li>\n</ol>\n<pre><code class=\"language-html\">&#x3C;a-text id=\"input\" color=\"#000\" value=\"Input value...\" scale=\"0.5 0.5 0.5\" position=\"-0.2 2 -1\">&#x3C;/a-text>\n&#x3C;a-entity\n    id=\"keyboard\"\n    position=\"-0.2 1.6 -0.5\"\n    a-keyboard\n>\n&#x3C;/a-entity>\n</code></pre>\n<ol start=\"2\">\n<li>Set an event listener to the keypress events that are emitted by the keyboard</li>\n</ol>\n<pre><code class=\"language-js\">var input = ''\nfunction updateInput(e) {\n    var code = parseInt(e.detail.code)\n    switch(code) {\n    case 8: // For now, the handling of \"delete\" events has to be handled by the developer\n        input = input.slice(0, -1)\n        break\n    case 06: // ACK events are used to submit the keyboard\n        alert('submitted')\n        var keyboard = document.querySelector('#keyboard')\n        // Do some fancy stuff like changing the style of a-text after submission\n        document.querySelector('#input').setAttribute('value', input)\n        document.querySelector('#input').setAttribute('color', 'blue')\n        keyboard.parentNode.removeChild(keyboard)\n        return\n    default:\n        input = input + e.detail.value\n        break\n    }\n    // added a \"_\" at the end to imply we're still editing the text\n    document.querySelector('#input').setAttribute('value', input + '_')\n}\n// Actually setting the event listener\ndocument.addEventListener('a-keyboard-update', updateInput)\n</code></pre>\n<p>But at the same time offering a <a href=\"https://github.com/WandererOU/aframe-keyboard#api\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">wider range of configurations</a> that can cover different nuances when it comes to the UX factor of this library.</p>\n<p>You can find the link of this project on GitHub <a href=\"https://github.com/WandererOU/aframe-keyboard\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">here</a>.</p>\n<h2 id=\"project-goals\"><a href=\"#project-goals\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Project Goals</h2>\n<ul>\n<li>To provide an easy-to-setup, customizeable keyboard for virtual reality that can be kept up-to-date to the latest Aframe versions.</li>\n</ul>\n<h2 id=\"skills-showcase\"><a href=\"#skills-showcase\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Skills showcase</h2>\n<ul>\n<li>Javascript (ES6)</li>\n<li>Webpack</li>\n</ul>\n<h2 id=\"conclusion\"><a href=\"#conclusion\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Conclusion</h2>\n<p>Receiving user input has always been tricky, and methods to do so are always evolving, but for as long as traditional keyboards are the fastest way to transfer information to our computers, an easy-to-setup library for WebVR developers will remain essential to accomplishing these goals.</p>\n<p>And although the project remains rather small, at about 9 stars and a singular pre-alpha release, I remain hopeful that I can grow this project enough to be used in production-level applications some day.</p>\n"}},{"node":{"title":"The rise of WebVR (and how Aframe can help fill the content drought)","path":"/blog/the-rise-of-webvr-and-how-aframe-can-help-fill-the-content-drought/","date":"15. April 2019","timeToRead":6,"description":"How could the latest advancements in WebVR help create the type of content VR really needs right now.","content":"<h2 id=\"introduction\"><a href=\"#introduction\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Introduction</h2>\n<p>Virtual reality has always been a topic of interest for the human population, as we've seen in movies, TV shows, books, and several forms of media that depict a distant future where reality itself has been replicated by technology, and that the bounds of what is possible can only be limited by one's own imagination.</p>\n<p>While we may not yet be in the dystopian world of The Matrix, we've began paving our way to it with the recent advancements of VR technology. </p>\n<p>Ever since Palmer Luckey re-ignited humanity's passion for the extraordinary with the introduction of Oculus' <a href=\"https://xinreality.com/wiki/Oculus_Rift_DK1\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">development kit 1</a>, HTC has come up with its own line of head mounted displays (HMDs for short), and Microsoft created an ecosystem for Virtual Reality, to which companies like ACER, HP, and Lenovo have created different versions of HMDs to be run on that ecosystem.</p>\n<p>This year is set to be an exciting year for VR, with the introduction of the Oculus Quest, a standalone <a href=\"https://packet39.com/blog/2018/02/25/3dof-6dof-roomscale-vr-360-video-and-everything-in-between/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">6DoF</a> headset that doesnât require a powerful gaming computer to run polished (albeit less graphically impressive) VR experiences, and new players like Valve introducing <a href=\"https://www.inverse.com/article/54708-valve-index-vr-headset-release-date-price-specs-steam\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">its own take on VR</a> with a new generation of controllers that track the movement of every finger. We'll also be getting a number of high-quality games like <a href=\"https://www.oculus.com/asgards-wrath/?locale=en_US\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Asgard's Wrath</a> and a patch for <a href=\"https://www.nomanssky.com/2019/03/no-mans-sky-beyond-vr/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">No Man's Sky</a> that enables full VR support.</p>\n<p>As exciting as most of the things mentioned above are, Palmer Luckey himself recently <a href=\"http://palmerluckey.com/free-isnt-cheap-enough/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">wrote an article</a> claiming that even if we were to distribute free VR headsets to the population worldwide, VR would still be hard pressed to succeed at keeping people engaged. But why is that?</p>\n<h2 id=\"the-content-issue\"><a href=\"#the-content-issue\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>The Content issue</h2>\n<p>Currently the majority of VR content is being delivered in the form of games. It makes sense given that many gamers aren't as price sensitive as the rest of the population, if it means that they get a premium experience out of the deal.</p>\n<p>This becomes a problem, however, when trying to bring VR into the mainstream. Because even if we were to have cheap headsets available, there aren't many uses for them outside of gaming, where the non-gaming experiences currently available are limited to short stories, documentaries, or creative apps (3D modeling and drawing).</p>\n<p>And when it comes to creating a full ecosystem of Virtual Reality applications, there are still many bases left to cover that are left open; some of them include:</p>\n<ul>\n<li>Fitness apps</li>\n<li>Educational apps</li>\n<li>Social Media apps</li>\n<li>Productivity apps</li>\n<li>Shopping apps</li>\n</ul>\n<p>Similarly to how the price of smartphones was justifiable because of the value brought to us by the App Store (or Google Play Store) and its diverse applications, VR will also require a certain amount of diversity and polish to its offerings in order to make the cost of a headset worthwhile. </p>\n<p>The problem with that is that developing for VR is a costly, time-consuming process, and most of the people with experience in the disciplines required to create VR apps, were people who were already in the creative industry.</p>\n<h2 id=\"enters-webvr-and-aframe\"><a href=\"#enters-webvr-and-aframe\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Enters WebVR and Aframe</h2>\n<p>While there's little doubt that currently the most polished and performant applications are built on top of the Unity or Unreal game engines, a new emerging alternative is being introduced, as modern browsers like Firefox (or browsers created from the ground-up with VR in mind, like <a href=\"https://www.supermedium.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Supermedium</a>) begin to add support for the positional tracking of HMDs and controllers, as well as events triggered by these controllers.</p>\n<p>The folks behind the previously mentioned Supermedium browser have created their own library that's been built on top of <a href=\"https://threejs.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Three.js</a>, called <a href=\"https://aframe.io\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Aframe</a>. Aframe enables you to create a 3D scene, import your own models, add objects and text, all with HTML and Javascript.</p>\n<p>This is important because Aframe:  </p>\n<h3 id=\"1-lowers-the-technical-barriers-to-entry\"><a href=\"#1-lowers-the-technical-barriers-to-entry\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>1. Lowers the technical barriers to entry</h3>\n<p>Developing for VR, as opposed to developing traditional websites, already include a plethora of new areas and topics to explore, such as creating and adding 3D models to your scene, adding sounds to enrich the experiences you're creating, and creating interfaces that are tailored for VR motion controllers.</p>\n<p>While none of the above are trivial things to learn on their own, having to learn how to develop on Unity or Unreal engines (including brushing up your C# or C++ skills) on top of that makes it incredibly time-consuming and difficult for any given individual to get started on bringing their ideas to life.</p>\n<p>At the very least with Aframe, you get to use your pre-existing knowledge of HTML and Javascript to be used as a foundation on which to build your ideas on top of. And with the many readily-made components, you can quickly put together a prototype, and work towards building a finished product.</p>\n<p>But just how difficult is it to build a VR scene on Aframe?</p>\n<pre><code class=\"language-html\">&#x3C;html>\n  &#x3C;head>\n    &#x3C;script src=\"https://aframe.io/releases/0.9.0/aframe.min.js\">&#x3C;/script>\n  &#x3C;/head>\n  &#x3C;body>\n    &#x3C;a-scene>\n      &#x3C;a-box position=\"-1 0.5 -3\" rotation=\"0 45 0\" color=\"#4CC3D9\">&#x3C;/a-box>\n      &#x3C;a-sphere position=\"0 1.25 -5\" radius=\"1.25\" color=\"#EF2D5E\">&#x3C;/a-sphere>\n      &#x3C;a-cylinder position=\"1 0.75 -3\" radius=\"0.5\" height=\"1.5\" color=\"#FFC65D\">&#x3C;/a-cylinder>\n      &#x3C;a-plane position=\"0 0 -4\" rotation=\"-90 0 0\" width=\"4\" height=\"4\" color=\"#7BC8A4\">&#x3C;/a-plane>\n      &#x3C;a-sky color=\"#ECECEC\">&#x3C;/a-sky>\n    &#x3C;/a-scene>\n  &#x3C;/body>\n&#x3C;/html>\n</code></pre>\n<p>As seen above, a few lines is all it takes to create 3D objects and initialize a scene you can explore not only in VR, but also with your standard desktop or mobile browser.</p>\n<h3 id=\"2-increases-the-diversity-of-creators\"><a href=\"#2-increases-the-diversity-of-creators\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2. Increases the diversity of creators</h3>\n<p>I'll admit, I'm making the assumption right now that most of the folks who can build experiences on Unity and Unreal engine are the ones who work within the entertainment industry, be it developing games, animations, or educational content that can be viewed in 3D. But I feel somewhat confident in saying that the people who have extensive amounts of experience in a specific industry, say, developing B2B productivity tools, will for the most part not be too familiar with game engines.</p>\n<p>This means that the ease of development brought by Aframe enables people from various areas of expertise to try their hand at bringing over these experiences to Virtual Reality, and who knows what types of different ways to visualize information and interact with other people will now become commonplace inside VR?</p>\n<h2 id=\"shortcomings-of-webvr\"><a href=\"#shortcomings-of-webvr\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Shortcomings of WebVR</h2>\n<p>As much as we see clear benefits and opportunities coming from consuming VR content through the web. There are still a few technical difficulties that should be overcome before WebVR can deliver contents of comparable quality when compared to game engines.</p>\n<h3 id=\"1-size-limitations\"><a href=\"#1-size-limitations\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>1. Size limitations</h3>\n<p>One of the main selling points of WebVR is the fact that no installation of a given app is required prior to using it. </p>\n<p>However this can easily become one of its shortcomings given that assets still need to be downloaded onto the client, and depending on the size of your scene, you can still be better off going the traditional route by having users download and install your app with all its assets prior to loading up your experience, instead of having them download everything each time they log onto your website.</p>\n<p>These limitations can be mitigated by caching assets that are frequently used, breaking down your scenes to use the minimum amount of resources possible (this is quite easily achievable when using route functionalities of Javascript frameworks), and offering the option of loading lower-quality assets (models with fewer poly counts, low-res textures and whatnot) to diminish download sizes for the client.</p>\n<h3 id=\"2-performance-limitations\"><a href=\"#2-performance-limitations\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2. Performance limitations</h3>\n<p>VR is still in its infancy, and WebVR even more so. </p>\n<p>This means means that large scenes can become unstable and suffer from frame-rate drops. And until WebVR matures further, scenes will have to be carefully constructed to be short and sweet, limiting poly counts on models and not relying on any over-the-top animations or particle effects.</p>\n<p>This may be discouraging but let's remember just <a href=\"https://www.webdesignmuseum.org/exhibitions/web-design-in-the-90s/apple-1996\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">how ugly websites used to be</a> in their early days before we got to the point where they can <a href=\"https://www.awwwards.com/websites/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">legitimately be considered works of art</a>.</p>\n<h2 id=\"conclusion\"><a href=\"#conclusion\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Conclusion</h2>\n<p>VR can be a beautiful medium for expression, and a powerful tool to get things done. Its potential, however, is not being thoroughly fulfilled given the lack of diversity and quality of experiences currently available in the market.</p>\n<p>But I remain hopeful that WebVR can pave the way for developers of various backgrounds to create meaningful content and revolutionize their respective industries.</p>\n"}}]}}},"context":{}}