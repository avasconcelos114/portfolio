{"data":{"post":{"title":"Aframe Keyboard Library","path":"/blog/aframe-keyboard","date":"12. August 2019","timeToRead":3,"cover_image":{"type":"image","mimeType":"image/png","src":"/portfolio/assets/static/keyboard.3df3210.83de84c.png","size":{"width":1851,"height":936},"sizes":"(max-width: 1851px) 100vw, 1851px","srcset":["/portfolio/assets/static/keyboard.1b91758.83de84c.png 480w","/portfolio/assets/static/keyboard.3df3210.83de84c.png 1024w"],"dataUri":"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 1851 936' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-17'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-17)' width='1851' height='936' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAgCAYAAACinX6EAAAACXBIWXMAAAsSAAALEgHS3X78AAAKNElEQVRo3t1ZaWxU1xWeqlHbSFWlqOoPUqn92X8plar%2bIqIljUQ3Yns8i2ffx%2bPxeN/BQEhD5R8EcJAIwoEEmtIgCFBw8G4wxsZsBkPANrbH%2b2z2eN%2bE0ddzrv3cseVSjIOTYunovLnz3rz7fec759x7LQuFQngZLRgMLjsWCAQWjD/LXnbgEmj2A4ODGB4Zwfj4OCYnJzE9Pf3yEBAJPBJ0OBzGGAGemprCNNkkXY8PD2OUyBiie2QvA3AJvAScr0dHRwXoKYo0Ax5iBfT3I9jbu2Chvr7/bwIioy4BHxsbE5GeIAIYNIOUwLIxCZEmW8sILfd5teClqA9TlDmnGfigz7cAeilgtshx2VrJUhqLtKcRFPn9cqAj752YmMA0ST3M73kK8OVM9qKjPzQ0JPJxkIoOjw0MDIjCxF5UZvJPU0tky1pk82Oc5xNU2UMMnGy5KK85AdIkGXxtbS1OnTqFrq4uAYR9a2sr%2bunlTEQvTzwiqkyUdM2y5pxmAiXS2PM9bI8fPxbVPNDTI8Cw9FcCfk0IKC4uxsGDB3Ho0CExdv78eeTm5uLIkSOoqKjA4cOHUV1dLYhggo4fP47Tp0%2bjvr4ejY2NqKmpQV1dHdrb29HZ2Yn79%2b8LL8gjMhnE8HyF93d3L4D/b0VvzQiIJILBsRI4om1tbbh79y6uX78urm/fvo2bN2%2bih6LIVlZWhitXrqCpqUlcFxYWYt%2b%2bfbh48aIYY%2bJYUWeIpA/37sXxo0fxSVERSonoczTOvf1bUQMic5mly%2bCDAVqY8GqMlMHqYBmz52hK949QPktjktT5eU4Z9qwSP0n9HhHX0dyMr%2b7cQSOR6W1pwe2GBvR2dHw7FCAARRYtn3%2buX4cH54zv8wcWiplkyxU8iUT%2bjlsdL2zCRAJHm%2bU/Qt%2bH/X5h/fNp8Y0SIIwnP%2b/ZAmOkgMEBDLZ0INzUQpPzITA%2bIsZCDFp6ZpkWKRmrgVd2oYiFzVLjQrgmKbC0zy9rFOEAfe8fDmP47BXMxBdidstOzP4pH4%2bV72J87wkEe6j4DYXpXv%2byvyG9h6%2b5G4xR9P0U5VBEu1uu8K2JAiLbFefuIuMxsuGxUcx%2b8AWwIRvYlA9s3gm8vQ3YmAn8ygEYdmHE240handcG/i3huZrBF9L9YEJ4AUPZmcxTt8tBfusEX8hCrh27RouXbokqjcbV/xa9jcacOPISbT81o3mP2eiRb4NLbH5aKXrR5uT8OgPiWj/dRzuZBeg4W4jblAx447AduvWLeGbqdBJ%2bc99/730dLyXkYFJInmlq74XQgBPbM%2bePXA6nfB4PEhKSoLb7UZyUjIS6XNmrA5pMVpkxeqRoTQiS2lChlyHrBgNMuU0HhOH5HeUSKJnPPQsP8%2b/k5KSCrvdjmPHjgnpSwr45euv47syGU5Q65sm1QSo969GBasmwE%2b5W1BQAIPBAKvVCofDISbOnz3uRNgUcfAkemCOVSPB7oQ9TkfeIbzdaIFZp0ZiogtWkwYupx0WYxzcCU64bEYY9AYUFX0sVoP8Hj7EeOfNN/EqEfDW%2bvUY5rk8Y65/rQQEg6GFdTz35927d0Ov1wvwbBaLBc74eAJjgkceBzuRkEjeQSS45Wo45XPeFqWES6eEw0Lg7RoiQU3AadxI3qKCWq0iAoqIgFH0EcjZJ0%2bQYjYLAn7x2mtovXdPtMFgxB5gjRQQXCAgQD%2byIz8fTgZOk3NRKvC12WyCK94Fh1wFp9EMa7SCQNlgV2rgZq/SIIE9RdxuNRH4OCTE22EjEjwJRCQpQqlUiiU0F1Um4AmAE7QS/AER8Ma6deijRQ/3/m9MAWEi4CG1sZTcPJgcTmhsDuicLmjJ5FYHVFY7lOSVJgsMGgNspABXDBFCinASMeZoJZykAJtJJSJvZyWwN2uQkmChOpAiCOCOwCkQJs/t8qevvIIkUtxjSgneCK0mDZ6bAD/vw2kRk/zIh43peTCaTJBTpBl0nMkMBZmN1BBjMMFG6RCt1cFBuW9RqJBgtcGipMjrKfJ6FUXcKcDPKUENs1ELm16JWHkMDhw4IAhgwpmE6ZkZnPz0UzykjRLvBFcj/1URwAucUVrSGh/0YWNqDpyuBETpjRRtM7Q2uwCup2IYTV5F5EQZjLBo9bBRKpjlSop%2bLAxEgs1KwFkBdjWBVyF%2bvgYk2A1Qq5TYv79wYYssGf8J8PPb4G8sBYZokaJt6sSm5EwYLFaYiAQjpUIMVe8YJkOnFwTozFZE6wyiqsep1aJWaAx62F1z1T/eboHNTIWSlUDeYtJja26WKILcYqXDE%2bkghAnhE6CvYzG0YgKCogCGxPo9FB6CorEdm%2bI9yEhLw7ad78KdnAwFgeYUMFBNiKJrI9UEVofBboOaZG5w2qhekFLos92mg9NMEXdQSrAnJTgtcXBZtUSYlgj4YP6dwUVrDz7bnyILPscp0HMT8B8ZzhHgo9zc0tCMzUnpiKEI/0WjQ5RGK6LOgKPVGsTwmPBaxGqpsmu1UMSpoSAlyBVK6LVkOg1MBhW0NK7TxCKJ1g27/1ZALdWJrTu3Y4DeNxgaEGkXeQrM64JJWiNErghXSoLseQ46eSJh2tv7h0bx%2b6v3scXlQTYtUXO3bkNeXh4MVORiVGqoFAphcdTOVGQKlQpKAqnSaaE26qlgctvUIiNRh%2bxUHbZn61Gww4B9uwz4KF%2bJzN1JsP2zEMe7rovdYngRCXPzYRJYCUs7wXLX0hH5iv8vsOj8ncGHeAvrR1HwK7xRcRWx7hRoktOg8KQgKj4Rf0xIwtukit%2bl52BDzg6sz/krfrOrAPZP9sB9shCJ5z5CckkRXJdP4HD1HozV2TDakorxjnRMtqdhpjkFuGzA5zcLkdpfg9SOYuzvroU30Ed7/0HRgYIRSuB0mJmaEmuCpV0hEjxvlfnsgBdPo/NnCLL/ne8R215x%2bDCIR4Fe7OuqgburHD%2b768W6ynv4ydUW/OizL/Hq0TP4PvnvnSiB7B9lkJ0ox89LK6B7WIlcXxVyfNXI6SffV4ns3kps7SlDbdeHeOKj3WIgHegj8K1uTNQnYO/9z5DWWYE8bxlSvBexq6sKd/xemnxYzIXnJ5HAO8cZapFj8zvFpbWBwfd3dqKBNmo36upQX1ODjpaWlSmAX1zva0M%2bTSrFW4LtNKkt3U2Q%2bQBZzxPIihsgO1lBVkXAK/Hj8xWIul2GvK5SbCPL6ihZZNlkmQQu2VuJ973/wt%2b7juFc52F83v4x3m8/h3R6T7aXnussRU5nGdLpndnkq/qbRSAGlmzKuFtwSrAahvm4ff6onAng06O2Bw/w5YULuNHQgPLSUnGUJnvWvGfZne1rEpPI8M5NKJNsu/cCNniJybZpfOfsFQJeih%2beKcdb9fR9Rym2dxMAuj%2bTTIAhwFnSNT3PPocs3VsuiPB4q5DUWYWMzvKIe%2bae4XeyTyXiT/Y2whcMLHs4wwsnPjqbot2j2DDxETzJnc8QS4iAy9XVKCkuxj3acv8brfeFnkRh3HcAAAAASUVORK5CYII=' /%3e%3c/svg%3e"},"tags":[{"id":"Front-end","title":"Front-end","path":"/tag/Front-end"},{"id":"A-Frame","title":"A-Frame","path":"/tag/A-Frame"}],"description":"","content":"<h1 id=\"project-recap-aframe-keyboard\"><a href=\"#project-recap-aframe-keyboard\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Project recap: Aframe Keyboard</h1>\n<p><img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 1851 936' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-5'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-5)' width='1851' height='936' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAgCAYAAACinX6EAAAACXBIWXMAAAsSAAALEgHS3X78AAAKNElEQVRo3t1ZaWxU1xWeqlHbSFWlqOoPUqn92X8plar%2bIqIljUQ3Yns8i2ffx%2bPxeN/BQEhD5R8EcJAIwoEEmtIgCFBw8G4wxsZsBkPANrbH%2b2z2eN%2bE0ddzrv3cseVSjIOTYunovLnz3rz7fec759x7LQuFQngZLRgMLjsWCAQWjD/LXnbgEmj2A4ODGB4Zwfj4OCYnJzE9Pf3yEBAJPBJ0OBzGGAGemprCNNkkXY8PD2OUyBiie2QvA3AJvAScr0dHRwXoKYo0Ax5iBfT3I9jbu2Chvr7/bwIioy4BHxsbE5GeIAIYNIOUwLIxCZEmW8sILfd5teClqA9TlDmnGfigz7cAeilgtshx2VrJUhqLtKcRFPn9cqAj752YmMA0ST3M73kK8OVM9qKjPzQ0JPJxkIoOjw0MDIjCxF5UZvJPU0tky1pk82Oc5xNU2UMMnGy5KK85AdIkGXxtbS1OnTqFrq4uAYR9a2sr%2bunlTEQvTzwiqkyUdM2y5pxmAiXS2PM9bI8fPxbVPNDTI8Cw9FcCfk0IKC4uxsGDB3Ho0CExdv78eeTm5uLIkSOoqKjA4cOHUV1dLYhggo4fP47Tp0%2bjvr4ejY2NqKmpQV1dHdrb29HZ2Yn79%2b8LL8gjMhnE8HyF93d3L4D/b0VvzQiIJILBsRI4om1tbbh79y6uX78urm/fvo2bN2%2bih6LIVlZWhitXrqCpqUlcFxYWYt%2b%2bfbh48aIYY%2bJYUWeIpA/37sXxo0fxSVERSonoczTOvf1bUQMic5mly%2bCDAVqY8GqMlMHqYBmz52hK949QPktjktT5eU4Z9qwSP0n9HhHX0dyMr%2b7cQSOR6W1pwe2GBvR2dHw7FCAARRYtn3%2buX4cH54zv8wcWiplkyxU8iUT%2bjlsdL2zCRAJHm%2bU/Qt%2bH/X5h/fNp8Y0SIIwnP%2b/ZAmOkgMEBDLZ0INzUQpPzITA%2bIsZCDFp6ZpkWKRmrgVd2oYiFzVLjQrgmKbC0zy9rFOEAfe8fDmP47BXMxBdidstOzP4pH4%2bV72J87wkEe6j4DYXpXv%2byvyG9h6%2b5G4xR9P0U5VBEu1uu8K2JAiLbFefuIuMxsuGxUcx%2b8AWwIRvYlA9s3gm8vQ3YmAn8ygEYdmHE240handcG/i3huZrBF9L9YEJ4AUPZmcxTt8tBfusEX8hCrh27RouXbokqjcbV/xa9jcacOPISbT81o3mP2eiRb4NLbH5aKXrR5uT8OgPiWj/dRzuZBeg4W4jblAx447AduvWLeGbqdBJ%2bc99/730dLyXkYFJInmlq74XQgBPbM%2bePXA6nfB4PEhKSoLb7UZyUjIS6XNmrA5pMVpkxeqRoTQiS2lChlyHrBgNMuU0HhOH5HeUSKJnPPQsP8%2b/k5KSCrvdjmPHjgnpSwr45euv47syGU5Q65sm1QSo969GBasmwE%2b5W1BQAIPBAKvVCofDISbOnz3uRNgUcfAkemCOVSPB7oQ9TkfeIbzdaIFZp0ZiogtWkwYupx0WYxzcCU64bEYY9AYUFX0sVoP8Hj7EeOfNN/EqEfDW%2bvUY5rk8Y65/rQQEg6GFdTz35927d0Ov1wvwbBaLBc74eAJjgkceBzuRkEjeQSS45Wo45XPeFqWES6eEw0Lg7RoiQU3AadxI3qKCWq0iAoqIgFH0EcjZJ0%2bQYjYLAn7x2mtovXdPtMFgxB5gjRQQXCAgQD%2byIz8fTgZOk3NRKvC12WyCK94Fh1wFp9EMa7SCQNlgV2rgZq/SIIE9RdxuNRH4OCTE22EjEjwJRCQpQqlUiiU0F1Um4AmAE7QS/AER8Ma6deijRQ/3/m9MAWEi4CG1sZTcPJgcTmhsDuicLmjJ5FYHVFY7lOSVJgsMGgNspABXDBFCinASMeZoJZykAJtJJSJvZyWwN2uQkmChOpAiCOCOwCkQJs/t8qevvIIkUtxjSgneCK0mDZ6bAD/vw2kRk/zIh43peTCaTJBTpBl0nMkMBZmN1BBjMMFG6RCt1cFBuW9RqJBgtcGipMjrKfJ6FUXcKcDPKUENs1ELm16JWHkMDhw4IAhgwpmE6ZkZnPz0UzykjRLvBFcj/1URwAucUVrSGh/0YWNqDpyuBETpjRRtM7Q2uwCup2IYTV5F5EQZjLBo9bBRKpjlSop%2bLAxEgs1KwFkBdjWBVyF%2bvgYk2A1Qq5TYv79wYYssGf8J8PPb4G8sBYZokaJt6sSm5EwYLFaYiAQjpUIMVe8YJkOnFwTozFZE6wyiqsep1aJWaAx62F1z1T/eboHNTIWSlUDeYtJja26WKILcYqXDE%2bkghAnhE6CvYzG0YgKCogCGxPo9FB6CorEdm%2bI9yEhLw7ad78KdnAwFgeYUMFBNiKJrI9UEVofBboOaZG5w2qhekFLos92mg9NMEXdQSrAnJTgtcXBZtUSYlgj4YP6dwUVrDz7bnyILPscp0HMT8B8ZzhHgo9zc0tCMzUnpiKEI/0WjQ5RGK6LOgKPVGsTwmPBaxGqpsmu1UMSpoSAlyBVK6LVkOg1MBhW0NK7TxCKJ1g27/1ZALdWJrTu3Y4DeNxgaEGkXeQrM64JJWiNErghXSoLseQ46eSJh2tv7h0bx%2b6v3scXlQTYtUXO3bkNeXh4MVORiVGqoFAphcdTOVGQKlQpKAqnSaaE26qlgctvUIiNRh%2bxUHbZn61Gww4B9uwz4KF%2bJzN1JsP2zEMe7rovdYngRCXPzYRJYCUs7wXLX0hH5iv8vsOj8ncGHeAvrR1HwK7xRcRWx7hRoktOg8KQgKj4Rf0xIwtukit%2bl52BDzg6sz/krfrOrAPZP9sB9shCJ5z5CckkRXJdP4HD1HozV2TDakorxjnRMtqdhpjkFuGzA5zcLkdpfg9SOYuzvroU30Ed7/0HRgYIRSuB0mJmaEmuCpV0hEjxvlfnsgBdPo/NnCLL/ne8R215x%2bDCIR4Fe7OuqgburHD%2b768W6ynv4ydUW/OizL/Hq0TP4PvnvnSiB7B9lkJ0ox89LK6B7WIlcXxVyfNXI6SffV4ns3kps7SlDbdeHeOKj3WIgHegj8K1uTNQnYO/9z5DWWYE8bxlSvBexq6sKd/xemnxYzIXnJ5HAO8cZapFj8zvFpbWBwfd3dqKBNmo36upQX1ODjpaWlSmAX1zva0M%2bTSrFW4LtNKkt3U2Q%2bQBZzxPIihsgO1lBVkXAK/Hj8xWIul2GvK5SbCPL6ihZZNlkmQQu2VuJ973/wt%2b7juFc52F83v4x3m8/h3R6T7aXnussRU5nGdLpndnkq/qbRSAGlmzKuFtwSrAahvm4ff6onAng06O2Bw/w5YULuNHQgPLSUnGUJnvWvGfZne1rEpPI8M5NKJNsu/cCNniJybZpfOfsFQJeih%2beKcdb9fR9Rym2dxMAuj%2bTTIAhwFnSNT3PPocs3VsuiPB4q5DUWYWMzvKIe%2bae4XeyTyXiT/Y2whcMLHs4wwsnPjqbot2j2DDxETzJnc8QS4iAy9XVKCkuxj3acv8brfeFnkRh3HcAAAAASUVORK5CYII=' /%3e%3c/svg%3e\" width=\"1851\" data-srcset=\"/portfolio/assets/static/keyboard.82a2fbd.83de84c.png 480w, /portfolio/assets/static/keyboard.cbab2cf.83de84c.png 1024w\" data-sizes=\"(max-width: 1851px) 100vw, 1851px\" data-src=\"/portfolio/assets/static/keyboard.cbab2cf.83de84c.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/portfolio/assets/static/keyboard.cbab2cf.83de84c.png\" width=\"1851\"></noscript></p>\n<h2 id=\"project-description\"><a href=\"#project-description\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Project Description</h2>\n<p>All forms of complex tools online, from social media experiences to productivity tools, rely on the same common denominator where <em>user input</em> can be received from a given user, and processed in any number of ways.</p>\n<p>The problem I found when attempting to develop prototypes for Aframe, was that the most common keyboard libraries around relied on static images being overlayed on top of invisible buttons that corresponded to the letter that they were representing. While that idea worked great in terms of having a light-weight attractive keyboard, it wasn't quite so good at allowing keyboards to be easily customized to other languages (think accented letters like <code class=\"language-text\">å</code>), or at giving quick options for the keyboard buttons or background to be switched out into a different texture.</p>\n<p>With these challenges in mind, I gave my honest attempt at creating a library that would create its own <a href=\"https://aframe.io/docs/0.9.0/core/component.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Aframe component</a>, which would draw a sequence of panels (some invisible, and some which would represent the textures or colors that were decided upon), and that it would allow users to input information on it by either clicking the keys through the browser, typing through their own physical keyboards, or using laser-pointers to click them from inside virtual reality.</p>\n<p>I did my best to ensure the keyboard can be ready to use right out of the box, when the amount of code needed to make full use of that includes only two steps:</p>\n<ol>\n<li>Adding the <code class=\"language-text\">a-text</code> tag that will be modified and add an <code class=\"language-text\">a-keyboard</code> attribute to an <code class=\"language-text\">a-entity</code> element</li>\n</ol>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-text</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>input<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">color</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>#000<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>Input value...<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">scale</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>0.5 0.5 0.5<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">position</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>-0.2 2 -1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-text</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-entity</span>\n    <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>keyboard<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">position</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>-0.2 1.6 -0.5<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">a-keyboard</span>\n<span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-entity</span><span class=\"token punctuation\">></span></span></code></pre>\n<ol start=\"2\">\n<li>Set an event listener to the keypress events that are emitted by the keyboard</li>\n</ol>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> input <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">updateInput</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> code <span class=\"token operator\">=</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>detail<span class=\"token punctuation\">.</span>code<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token number\">8</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">// For now, the handling of \"delete\" events has to be handled by the developer</span>\n        input <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">break</span>\n    <span class=\"token keyword\">case</span> <span class=\"token number\">06</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">// ACK events are used to submit the keyboard</span>\n        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'submitted'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">var</span> keyboard <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#keyboard'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">// Do some fancy stuff like changing the style of a-text after submission</span>\n        document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#input'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'value'</span><span class=\"token punctuation\">,</span> input<span class=\"token punctuation\">)</span>\n        document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#input'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'color'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'blue'</span><span class=\"token punctuation\">)</span>\n        keyboard<span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>keyboard<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span>\n    <span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span>\n        input <span class=\"token operator\">=</span> input <span class=\"token operator\">+</span> e<span class=\"token punctuation\">.</span>detail<span class=\"token punctuation\">.</span>value\n        <span class=\"token keyword\">break</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// added a \"_\" at the end to imply we're still editing the text</span>\n    document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#input'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'value'</span><span class=\"token punctuation\">,</span> input <span class=\"token operator\">+</span> <span class=\"token string\">'_'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// Actually setting the event listener</span>\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a-keyboard-update'</span><span class=\"token punctuation\">,</span> updateInput<span class=\"token punctuation\">)</span></code></pre>\n<p>But at the same time offering a <a href=\"https://github.com/WandererOU/aframe-keyboard#api\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">wider range of configurations</a> that can cover different nuances when it comes to the UX factor of this library.</p>\n<p>You can find the link of this project on GitHub <a href=\"https://github.com/WandererOU/aframe-keyboard\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">here</a>.</p>\n<h2 id=\"project-goals\"><a href=\"#project-goals\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Project Goals</h2>\n<ul>\n<li>To provide an easy-to-setup, customizeable keyboard for virtual reality that can be kept up-to-date to the latest Aframe versions.</li>\n</ul>\n<h2 id=\"skills-showcase\"><a href=\"#skills-showcase\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Skills showcase</h2>\n<ul>\n<li>Javascript (ES6)</li>\n<li>Webpack</li>\n</ul>\n<h2 id=\"conclusion\"><a href=\"#conclusion\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Conclusion</h2>\n<p>Receiving user input has always been tricky, and methods to do so are always evolving, but for as long as traditional keyboards are the fastest way to transfer information to our computers, an easy-to-setup library for WebVR developers will remain essential to accomplishing these goals.</p>\n<p>And although the project remains rather small, at about 9 stars and a singular pre-alpha release, I remain hopeful that I can grow this project enough to be used in production-level applications some day.</p>\n"}},"context":{}}